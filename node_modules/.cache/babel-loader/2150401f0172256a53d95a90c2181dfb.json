{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rnd\\\\sofia-react-template\\\\src\\\\pages\\\\notifications\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport classnames from \"classnames\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport Widget from \"../../components/Widget/Widget.js\";\nimport Code from \"../../components/Code/Code.js\";\nimport Notification from \"../../components/Notification/Notification.js\";\nimport s from \"./Notifications.module.scss\";\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\nimport closeIcon from \"../../assets/notificationsIcons/closeIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [toast.POSITION.TOP_LEFT, toast.POSITION.TOP_CENTER, toast.POSITION.TOP_RIGHT, toast.POSITION.BOTTOM_LEFT, toast.POSITION.BOTTOM_CENTER, toast.POSITION.BOTTOM_RIGHT];\nconst notificationTypes = [\"info\", \"success\", \"warning\", \"error\"];\n\nconst Notifications = function () {\n  _s();\n\n  const [notificationPosition, setNotificationPosition] = useState(2);\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n\n  const getRandomNotification = () => {\n    return notificationTypes[Math.floor(Math.random() * notificationTypes.length)];\n  };\n\n  const options = {\n    autoClose: 4000,\n    closeButton: false,\n    hideProgressBar: true,\n    position: positions[notificationPosition]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"gutter mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          className: \"widget-p-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline-2\",\n            children: \"Layout Options\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.widgetText,\n            children: \"There are few position options available for notifications. You can click any of them to change notifications position:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.layoutContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.layoutButtonsRow,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(0),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 0\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(1),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 1\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(2),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 2\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.layoutText,\n              children: \"Click any position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: s.layoutButtonsRow,\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(3),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 3\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(4),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 4\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => changeNotificationPosition(5),\n                className: classnames(s.layoutButton, {\n                  [s.layoutButtonActive]: notificationPosition === 5\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 4,\n        className: \"mt-4 mt-lg-0\",\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          className: \"widget-p-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline-2\",\n            children: \"Notification Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.widgetText,\n            children: \"Different types of notifications for lots of use cases. Custom classes are also supported.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" headline-3 mt-4 mb-2\",\n            children: \"Message with icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            className: \"notification-btn\",\n            onClick: () => {\n              let value = getRandomNotification();\n              toast( /*#__PURE__*/_jsxDEV(Notification, {\n                type: value,\n                withIcon: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this), options);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: successIcon,\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-2 body-2\",\n                children: \"Default message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: closeIcon,\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" headline-3 mt-4 mb-2\",\n            children: \"Message without icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            className: \"notification-btn\",\n            onClick: () => {\n              let value = getRandomNotification();\n              toast( /*#__PURE__*/_jsxDEV(Notification, {\n                type: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 23\n              }, this), options);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-2 body-2\",\n              children: \"Default message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: closeIcon,\n              alt: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 4,\n        className: \"mt-4 mt-lg-0\",\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          className: \"widget-p-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline-2\",\n            children: \"Notification Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.widgetText,\n            children: \"Different types of notifications for lots of use cases. Custom classes are also supported.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Code, {\n            children: `\n  // import needed components, functions and styles\n  import { ToastContainer, toast } from 'react-toastify';\n  import 'react-toastify/dist/ReactToastify.css';\n\n  const Page = () => {\n    <div>\n      <ToastContainer />\n      <button onClick={() => toast('Toast Message')}>\n        show notification\n      </button>\n    </div>\n  };\n            `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"label muted\",\n            children: \"For more API information refer to the library documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"gutter mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          className: \"widget-p-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline-2 mb-4\",\n            children: \"Notification Types Examples\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"info\",\n            withIcon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"error\",\n            withIcon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"success\",\n            withIcon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"warning\",\n            withIcon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        lg: 6,\n        className: \"mt-4 mt-lg-0\",\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          className: \"widget-p-md\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline-2 mb-4\",\n            children: \"Notifications Types Examples, without icons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Notification, {\n            type: \"warning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notifications, \"3rP52sIzFrQH6d0OMxj40JHqLio=\");\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/src/pages/notifications/Notifications.js"],"names":["React","useState","toast","classnames","Col","Row","Button","Widget","Code","Notification","s","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","notificationTypes","Notifications","notificationPosition","setNotificationPosition","changeNotificationPosition","positionId","getRandomNotification","Math","floor","random","length","options","autoClose","closeButton","hideProgressBar","position","widgetText","layoutContainer","layoutButtonsRow","layoutButton","layoutButtonActive","layoutText","value","successIcon","closeIcon"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Widget from \"../../components/Widget/Widget.js\";\r\nimport Code from \"../../components/Code/Code.js\";\r\nimport Notification from \"../../components/Notification/Notification.js\";\r\nimport s from \"./Notifications.module.scss\";\r\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\r\nimport closeIcon from \"../../assets/notificationsIcons/closeIcon.svg\";\r\n\r\nconst positions = [\r\n  toast.POSITION.TOP_LEFT,\r\n  toast.POSITION.TOP_CENTER,\r\n  toast.POSITION.TOP_RIGHT,\r\n  toast.POSITION.BOTTOM_LEFT,\r\n  toast.POSITION.BOTTOM_CENTER,\r\n  toast.POSITION.BOTTOM_RIGHT\r\n];\r\n\r\nconst notificationTypes = [\"info\", \"success\", \"warning\", \"error\"]\r\n\r\nconst Notifications = function () {\r\n\r\n  const [notificationPosition, setNotificationPosition] = useState(2)\r\n\r\n  function changeNotificationPosition(positionId) {\r\n    setNotificationPosition(positionId)\r\n  }\r\n\r\n  const getRandomNotification = () => {\r\n    return notificationTypes[Math.floor(Math.random()*notificationTypes.length)]\r\n  }\r\n\r\n  const options = {\r\n    autoClose: 4000,\r\n    closeButton: false,\r\n    hideProgressBar: true,\r\n    position: positions[notificationPosition],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"gutter mb-4\">\r\n        <Col xs={12} lg={4}>\r\n          <Widget className=\"widget-p-md\">\r\n            <div className=\"headline-2\">Layout Options</div>\r\n            <div className={s.widgetText}>There are few position options available for notifications. You can click any of them to change notifications position:</div>\r\n            <div className={s.layoutContainer}>\r\n              <div className={s.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(0)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 0})}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(1)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 1})}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(2)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 2})}\r\n                />\r\n              </div>\r\n              <div className={s.layoutText}>Click any position</div>\r\n              <div className={s.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(3)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 3})}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(4)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 4})}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(5)}\r\n                  className={classnames(s.layoutButton, {[s.layoutButtonActive]: notificationPosition === 5})}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Col>\r\n        <Col xs={12} lg={4} className=\"mt-4 mt-lg-0\">\r\n          <Widget className=\"widget-p-md\">\r\n            <div className=\"headline-2\">Notification Types</div>\r\n            <div className={s.widgetText}>Different types of notifications for lots of use cases. Custom classes are also supported.</div>\r\n            <div className=\" headline-3 mt-4 mb-2\">Message with icon</div>\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"notification-btn\"\r\n              onClick={() => {\r\n                let value = getRandomNotification();\r\n                toast(<Notification type={value} withIcon />, options)}\r\n              }\r\n            >\r\n              <div className=\"d-flex\">\r\n                <img src={successIcon} alt=\"...\"/>\r\n                <div className=\"ml-2 body-2\">Default message</div>\r\n              </div>\r\n              <img src={closeIcon} alt=\"...\"/>\r\n            </Button>\r\n            <div className=\" headline-3 mt-4 mb-2\">Message without icon</div>\r\n            <Button\r\n              color=\"primary\"\r\n              className=\"notification-btn\"\r\n              onClick={() => {\r\n                let value = getRandomNotification();\r\n                toast(<Notification type={value}/>, options)\r\n                }\r\n              }\r\n            >\r\n              <div className=\"ml-2 body-2\">Default message</div>\r\n              <img src={closeIcon} alt=\"...\"/>\r\n            </Button>\r\n          </Widget>\r\n        </Col>\r\n        <Col xs={12} lg={4} className=\"mt-4 mt-lg-0\">\r\n          <Widget className=\"widget-p-md\">\r\n            <div className=\"headline-2\">Notification Types</div>\r\n            <div className={s.widgetText}>Different types of notifications for lots of use cases. Custom classes are also supported.</div>\r\n            <Code>{`\r\n  // import needed components, functions and styles\r\n  import { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\n  const Page = () => {\r\n    <div>\r\n      <ToastContainer />\r\n      <button onClick={() => toast('Toast Message')}>\r\n        show notification\r\n      </button>\r\n    </div>\r\n  };\r\n            `}</Code>\r\n            <p className=\"label muted\">For more API information refer to the library documentation</p>\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"gutter mb-4\">\r\n        <Col xs={12} lg={6}>\r\n          <Widget className=\"widget-p-md\">\r\n            <div className=\"headline-2 mb-4\">Notification Types Examples</div>\r\n            <Notification\r\n              type=\"info\"\r\n              withIcon\r\n            />\r\n            <Notification\r\n              type=\"error\"\r\n              withIcon\r\n            />\r\n            <Notification\r\n              type=\"success\"\r\n              withIcon\r\n            />\r\n            <Notification\r\n              type=\"warning\"\r\n              withIcon\r\n            />\r\n          </Widget>\r\n        </Col>\r\n        <Col xs={12} lg={6} className=\"mt-4 mt-lg-0\">\r\n          <Widget className=\"widget-p-md\">\r\n            <div className=\"headline-2 mb-4\">Notifications Types Examples, without icons</div>\r\n            <Notification\r\n              type=\"info\"\r\n            />\r\n            <Notification\r\n              type=\"error\"\r\n            />\r\n            <Notification\r\n              type=\"success\"\r\n            />\r\n            <Notification\r\n              type=\"warning\"\r\n            />\r\n          </Widget>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;\r\n\r\n"]},"metadata":{},"sourceType":"module"}