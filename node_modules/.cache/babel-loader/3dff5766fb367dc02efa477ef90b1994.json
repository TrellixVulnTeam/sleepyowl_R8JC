{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rnd\\\\sleepyowl\\\\src\\\\components\\\\Notification\\\\Notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport infoIcon from \"../../assets/notificationsIcons/infoIcon.svg\";\nimport warningIcon from \"../../assets/notificationsIcons/warningIcon.svg\";\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\nimport dangerIcon from \"../../assets/notificationsIcons/dangerIcon.svg\";\nimport s from \"./Notification.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst typesIcons = {\n  info: infoIcon,\n  warning: warningIcon,\n  success: successIcon,\n  error: dangerIcon\n};\nconst notificationMessages = {\n  info: \"<span class='body-2'>Info:</span> This alert needs your attention, but it's not important.\",\n  warning: \"<span class='body-2'>Warning:</span> Best check yourself, you're not looking too good.\",\n  success: \"<span class='body-2'>Success:</span> You successfully read this important alert message.\",\n  error: \"<span class='body-2'>Danger:</span> Danger: Change this and that and try again.\"\n};\nconst colors = {\n  info: \"#00A5FF\",\n  warning: \"#FFA100\",\n  success: \"#43BC13\",\n  error: \"#FF4B23\"\n};\nexport default function Notification(_ref) {\n  _s();\n\n  let { ...props\n  } = _ref;\n  const [notificationOpen, setNotificationClose] = useState(true);\n  const icon = getIconByType(props.type);\n\n  const closeNotification = () => {\n    setNotificationClose(!notificationOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      className: s.notificationContainer,\n      style: {\n        backgroundColor: colors[props.type]\n      },\n      isOpen: notificationOpen,\n      toggle: () => closeNotification(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.notificationIconContainer,\n        children: props.withIcon && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messageContainer,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: notificationMessages[props.type]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Notification, \"JdAkhY3SuLGiWz75MnENJ+3BJgc=\");\n\n_c = Notification;\n;\n\nfunction getIconByType() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"info\";\n  return typesIcons[type];\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"sources":["D:/Rnd/sleepyowl/src/components/Notification/Notification.js"],"names":["React","useState","Alert","s","typesIcons","info","infoIcon","warning","warningIcon","success","successIcon","error","dangerIcon","notificationMessages","colors","Notification","props","notificationOpen","setNotificationClose","icon","getIconByType","type","closeNotification","notificationContainer","backgroundColor","notificationIconContainer","withIcon","messageContainer","__html"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,YAAtB;;;;;AAOA,OAAOC,CAAP,MAAc,4BAAd;;;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,IAAI,EAAEC,QADW;AAEjBC,EAAAA,OAAO,EAAEC,WAFQ;AAGjBC,EAAAA,OAAO,EAAEC,WAHQ;AAIjBC,EAAAA,KAAK,EAAEC;AAJU,CAAnB;AAOA,MAAMC,oBAAoB,GAAG;AAC3BR,EAAAA,IAAI,EAAE,4FADqB;AAE3BE,EAAAA,OAAO,EAAE,wFAFkB;AAG3BE,EAAAA,OAAO,EAAE,0FAHkB;AAI3BE,EAAAA,KAAK,EAAE;AAJoB,CAA7B;AAOA,MAAMG,MAAM,GAAG;AACbT,EAAAA,IAAI,EAAE,SADO;AAEbE,EAAAA,OAAO,EAAE,SAFI;AAGbE,EAAAA,OAAO,EAAE,SAHI;AAIbE,EAAAA,KAAK,EAAE;AAJM,CAAf;AAOA,eAAe,SAASI,YAAT,OAAoC;AAAA;;AAAA,MAAd,EAAE,GAAGC;AAAL,GAAc;AAEjD,QAAM,CAACC,gBAAD,EAAmBC,oBAAnB,IAA2CjB,QAAQ,CAAC,IAAD,CAAzD;AAEA,QAAMkB,IAAI,GAAGC,aAAa,CAACJ,KAAK,CAACK,IAAP,CAA1B;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BJ,IAAAA,oBAAoB,CAAC,CAACD,gBAAF,CAApB;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAEd,CAAC,CAACoB,qBADf;AAEE,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAEV,MAAM,CAACE,KAAK,CAACK,IAAP;AAAxB,OAFT;AAGE,MAAA,MAAM,EAAEJ,gBAHV;AAIE,MAAA,MAAM,EAAE,MAAMK,iBAAiB,EAJjC;AAAA,8BAME;AAAK,QAAA,SAAS,EAAEnB,CAAC,CAACsB,yBAAlB;AAAA,kBACGT,KAAK,CAACU,QAAN,iBAAkB;AAAK,UAAA,GAAG,EAAEP,IAAV;AAAgB,UAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAK,QAAA,SAAS,EAAEhB,CAAC,CAACwB,gBAAlB;AAAA,+BACE;AAAM,UAAA,uBAAuB,EAAE;AAACC,YAAAA,MAAM,EAAEf,oBAAoB,CAACG,KAAK,CAACK,IAAP;AAA7B;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD;;GA3BuBN,Y;;KAAAA,Y;AA2BvB;;AAED,SAASK,aAAT,GAAsC;AAAA,MAAfC,IAAe,uEAAR,MAAQ;AACpC,SAAOjB,UAAU,CAACiB,IAAD,CAAjB;AACD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert } from \"reactstrap\";\r\n\r\nimport infoIcon from \"../../assets/notificationsIcons/infoIcon.svg\";\r\nimport warningIcon from \"../../assets/notificationsIcons/warningIcon.svg\";\r\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\r\nimport dangerIcon from \"../../assets/notificationsIcons/dangerIcon.svg\";\r\n\r\nimport s from \"./Notification.module.scss\";\r\n\r\nconst typesIcons = {\r\n  info: infoIcon,\r\n  warning: warningIcon,\r\n  success: successIcon,\r\n  error: dangerIcon,\r\n}\r\n\r\nconst notificationMessages = {\r\n  info: \"<span class='body-2'>Info:</span> This alert needs your attention, but it's not important.\",\r\n  warning: \"<span class='body-2'>Warning:</span> Best check yourself, you're not looking too good.\",\r\n  success: \"<span class='body-2'>Success:</span> You successfully read this important alert message.\",\r\n  error: \"<span class='body-2'>Danger:</span> Danger: Change this and that and try again.\",\r\n}\r\n\r\nconst colors = {\r\n  info: \"#00A5FF\",\r\n  warning: \"#FFA100\",\r\n  success: \"#43BC13\",\r\n  error: \"#FF4B23\",\r\n}\r\n\r\nexport default function Notification({ ...props }) {\r\n\r\n  const [notificationOpen, setNotificationClose] = useState(true)\r\n\r\n  const icon = getIconByType(props.type)\r\n\r\n  const closeNotification = () => {\r\n    setNotificationClose(!notificationOpen)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        className={s.notificationContainer}\r\n        style={{backgroundColor: colors[props.type]}}\r\n        isOpen={notificationOpen}\r\n        toggle={() => closeNotification()}\r\n      >\r\n        <div className={s.notificationIconContainer}>\r\n          {props.withIcon && <img src={icon} alt=\"...\"/>}\r\n        </div>\r\n        <div className={s.messageContainer}>\r\n          <span dangerouslySetInnerHTML={{__html: notificationMessages[props.type]}}></span>\r\n        </div>\r\n      </Alert>\r\n    </>\r\n  )\r\n};\r\n\r\nfunction getIconByType(type = \"info\") {\r\n  return typesIcons[type];\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}