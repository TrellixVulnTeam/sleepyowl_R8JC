{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rnd\\\\sleepyowl\\\\src\\\\pages\\\\notifications\\\\Notifications.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport classnames from \"classnames\";\nimport { Col, Row, Button } from \"reactstrap\";\nimport Widget from \"../../components/Widget/Widget.js\";\nimport Code from \"../../components/Code/Code.js\";\nimport Notification from \"../../components/Notification/Notification.js\";\nimport s from \"./Notifications.module.scss\";\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\nimport closeIcon from \"../../assets/notificationsIcons/closeIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst positions = [toast.POSITION.TOP_LEFT, toast.POSITION.TOP_CENTER, toast.POSITION.TOP_RIGHT, toast.POSITION.BOTTOM_LEFT, toast.POSITION.BOTTOM_CENTER, toast.POSITION.BOTTOM_RIGHT];\nconst notificationTypes = [\"info\", \"success\", \"warning\", \"error\"];\n\nconst Notifications = function () {\n  _s();\n\n  const [notificationPosition, setNotificationPosition] = useState(2);\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n\n  const getRandomNotification = () => {\n    return notificationTypes[Math.floor(Math.random() * notificationTypes.length)];\n  };\n\n  const options = {\n    autoClose: 4000,\n    closeButton: false,\n    hideProgressBar: true,\n    position: positions[notificationPosition]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Notifications, \"3rP52sIzFrQH6d0OMxj40JHqLio=\");\n\n_c = Notifications;\nexport default Notifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"sources":["D:/Rnd/sleepyowl/src/pages/notifications/Notifications.js"],"names":["React","useState","toast","classnames","Col","Row","Button","Widget","Code","Notification","s","positions","POSITION","TOP_LEFT","TOP_CENTER","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","notificationTypes","Notifications","notificationPosition","setNotificationPosition","changeNotificationPosition","positionId","getRandomNotification","Math","floor","random","length","options","autoClose","closeButton","hideProgressBar","position"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,QAIO,YAJP;AAKA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,CAAP,MAAc,6BAAd;;;;AAIA,MAAMC,SAAS,GAAG,CAChBT,KAAK,CAACU,QAAN,CAAeC,QADC,EAEhBX,KAAK,CAACU,QAAN,CAAeE,UAFC,EAGhBZ,KAAK,CAACU,QAAN,CAAeG,SAHC,EAIhBb,KAAK,CAACU,QAAN,CAAeI,WAJC,EAKhBd,KAAK,CAACU,QAAN,CAAeK,aALC,EAMhBf,KAAK,CAACU,QAAN,CAAeM,YANC,CAAlB;AASA,MAAMC,iBAAiB,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,OAA/B,CAA1B;;AAEA,MAAMC,aAAa,GAAG,YAAY;AAAA;;AAEhC,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,CAAC,CAAD,CAAhE;;AAEA,WAASsB,0BAAT,CAAoCC,UAApC,EAAgD;AAC9CF,IAAAA,uBAAuB,CAACE,UAAD,CAAvB;AACD;;AAED,QAAMC,qBAAqB,GAAG,MAAM;AAClC,WAAON,iBAAiB,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcT,iBAAiB,CAACU,MAA3C,CAAD,CAAxB;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG;AACdC,IAAAA,SAAS,EAAE,IADG;AAEdC,IAAAA,WAAW,EAAE,KAFC;AAGdC,IAAAA,eAAe,EAAE,IAHH;AAIdC,IAAAA,QAAQ,EAAEvB,SAAS,CAACU,oBAAD;AAJL,GAAhB;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMD,a;;KAAAA,a;AA0BN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Widget from \"../../components/Widget/Widget.js\";\r\nimport Code from \"../../components/Code/Code.js\";\r\nimport Notification from \"../../components/Notification/Notification.js\";\r\nimport s from \"./Notifications.module.scss\";\r\nimport successIcon from \"../../assets/notificationsIcons/successIcon.svg\";\r\nimport closeIcon from \"../../assets/notificationsIcons/closeIcon.svg\";\r\n\r\nconst positions = [\r\n  toast.POSITION.TOP_LEFT,\r\n  toast.POSITION.TOP_CENTER,\r\n  toast.POSITION.TOP_RIGHT,\r\n  toast.POSITION.BOTTOM_LEFT,\r\n  toast.POSITION.BOTTOM_CENTER,\r\n  toast.POSITION.BOTTOM_RIGHT\r\n];\r\n\r\nconst notificationTypes = [\"info\", \"success\", \"warning\", \"error\"]\r\n\r\nconst Notifications = function () {\r\n\r\n  const [notificationPosition, setNotificationPosition] = useState(2)\r\n\r\n  function changeNotificationPosition(positionId) {\r\n    setNotificationPosition(positionId)\r\n  }\r\n\r\n  const getRandomNotification = () => {\r\n    return notificationTypes[Math.floor(Math.random()*notificationTypes.length)]\r\n  }\r\n\r\n  const options = {\r\n    autoClose: 4000,\r\n    closeButton: false,\r\n    hideProgressBar: true,\r\n    position: positions[notificationPosition],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications;\r\n\r\n"]},"metadata":{},"sourceType":"module"}