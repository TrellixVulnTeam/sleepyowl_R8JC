{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rnd\\\\sofia-react-template\\\\src\\\\components\\\\Breadbrumbs\\\\Breadcrumbs.js\";\n// -- React and related libs\nimport React from \"react\";\nimport { Link } from \"react-router-dom\"; // -- Reactstrap Imports\n\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\"; // -- Third Party Libs\n\nimport { v4 as uuidv4 } from \"uuid\"; // -- Component Styles\n\nimport s from \"./Breadcrumbs.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Breadcrumbs = props => {\n  const renderBreadcrumbs = () => {\n    let url = props.url;\n    let route = props.url.split('/').slice(1).map(route => route.split('-').map(word => word.length < 3 ? word.toUpperCase() : word[0].toUpperCase() + word.slice(1)).join(' '));\n    const length = route.length;\n    return route.map((item, index) => {\n      let middlewareUrl = \"/\" + url.split(\"/\").slice(1, index + 2).join(\"/\");\n      return /*#__PURE__*/_jsxDEV(BreadcrumbItem, {\n        children: length === index + 1 ? item : /*#__PURE__*/_jsxDEV(Link, {\n          to: middlewareUrl,\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  let routeArr = props.url.split('/');\n  let title = routeArr[routeArr.length - 1];\n  let breadcrumbTitle = title[0].toUpperCase() + title.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.breadcrumbs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline-2\",\n      children: breadcrumbTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), breadcrumbTitle !== \"Dashboard\" && /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      tag: \"nav\",\n      listTag: \"div\",\n      children: renderBreadcrumbs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Breadcrumbs;\nexport default Breadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/src/components/Breadbrumbs/Breadcrumbs.js"],"names":["React","Link","Breadcrumb","BreadcrumbItem","v4","uuidv4","s","Breadcrumbs","props","renderBreadcrumbs","url","route","split","slice","map","word","length","toUpperCase","join","item","index","middlewareUrl","routeArr","title","breadcrumbTitle","breadcrumbs"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,YAA3C,C,CAEA;;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CAEA;;AACA,OAAOC,CAAP,MAAc,2BAAd;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE7B,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,GAAG,GAAGF,KAAK,CAACE,GAAhB;AACA,QAAIC,KAAK,GAAGH,KAAK,CAACE,GAAN,CAAUE,KAAV,CAAgB,GAAhB,EACTC,KADS,CACH,CADG,EAETC,GAFS,CAELH,KAAK,IAAIA,KAAK,CAChBC,KADW,CACL,GADK,EAEXE,GAFW,CAEPC,IAAI,IAAIA,IAAI,CAACC,MAAL,GAAc,CAAd,GACTD,IAAI,CAACE,WAAL,EADS,GAETF,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,KAAwBF,IAAI,CAACF,KAAL,CAAW,CAAX,CAJhB,EAKXK,IALW,CAKN,GALM,CAFJ,CAAZ;AASA,UAAMF,MAAM,GAAGL,KAAK,CAACK,MAArB;AAEA,WAAOL,KAAK,CAACG,GAAN,CAAU,CAACK,IAAD,EAAOC,KAAP,KAAiB;AAChC,UAAIC,aAAa,GAAG,MAAMX,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,KAAf,CAAqB,CAArB,EAAwBO,KAAK,GAAG,CAAhC,EAAmCF,IAAnC,CAAwC,GAAxC,CAA1B;AAEA,0BACE,QAAC,cAAD;AAAA,kBACGF,MAAM,KAAKI,KAAK,GAAG,CAAnB,GACGD,IADH,gBAEG,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEE,aAAV;AAAA,oBACCF;AADD;AAAA;AAAA;AAAA;AAAA;AAHN,SAAqBd,MAAM,EAA3B;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAbM,CAAP;AAcD,GA3BD;;AA6BA,MAAIiB,QAAQ,GAAGd,KAAK,CAACE,GAAN,CAAUE,KAAV,CAAgB,GAAhB,CAAf;AACA,MAAIW,KAAK,GAAGD,QAAQ,CAACA,QAAQ,CAACN,MAAT,GAAkB,CAAnB,CAApB;AACA,MAAIQ,eAAe,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASN,WAAT,KAAyBM,KAAK,CAACV,KAAN,CAAY,CAAZ,CAA/C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACmB,WAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBAA6BD;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,eAAe,KAAK,WAApB,iBACD,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,KAAhB;AAAsB,MAAA,OAAO,EAAC,KAA9B;AAAA,gBACGf,iBAAiB;AADpB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7CD;;KAAMF,W;AA+CN,eAAeA,WAAf","sourcesContent":["// -- React and related libs\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// -- Reactstrap Imports\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\n\r\n// -- Third Party Libs\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// -- Component Styles\r\nimport s from \"./Breadcrumbs.module.scss\";\r\n\r\nconst Breadcrumbs = (props) => {\r\n\r\n  const renderBreadcrumbs = () => {\r\n    let url = props.url;\r\n    let route = props.url.split('/')\r\n      .slice(1)\r\n      .map(route => route\r\n        .split('-')\r\n        .map(word => word.length < 3\r\n          ? word.toUpperCase()\r\n          : word[0].toUpperCase() + word.slice(1))\r\n        .join(' ')\r\n      );\r\n    const length = route.length\r\n\r\n    return route.map((item, index) => {\r\n      let middlewareUrl = \"/\" + url.split(\"/\").slice(1, index + 2).join(\"/\");\r\n\r\n      return (\r\n        <BreadcrumbItem key={uuidv4()}>\r\n          {length === index + 1\r\n            ? item\r\n            : <Link to={middlewareUrl}>\r\n              {item}\r\n            </Link>\r\n          }\r\n        </BreadcrumbItem>\r\n      )\r\n    })\r\n  }\r\n\r\n  let routeArr = props.url.split('/');\r\n  let title = routeArr[routeArr.length - 1];\r\n  let breadcrumbTitle = title[0].toUpperCase() + title.slice(1)\r\n\r\n  return (\r\n    <div className={s.breadcrumbs}>\r\n      <div className=\"headline-2\">{breadcrumbTitle}</div>\r\n      {breadcrumbTitle !== \"Dashboard\" &&\r\n      <Breadcrumb tag=\"nav\" listTag=\"div\">\r\n        {renderBreadcrumbs()}\r\n      </Breadcrumb>\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Breadcrumbs;\r\n"]},"metadata":{},"sourceType":"module"}