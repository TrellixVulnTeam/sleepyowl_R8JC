{"ast":null,"code":"import { Keys } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nexport var NavigationAction;\n\n(function (NavigationAction) {\n  NavigationAction[NavigationAction[\"Toggle\"] = 0] = \"Toggle\";\n  NavigationAction[NavigationAction[\"Next\"] = 1] = \"Next\";\n  NavigationAction[NavigationAction[\"Previous\"] = 2] = \"Previous\";\n})(NavigationAction || (NavigationAction = {}));\n/**\n * @hidden\n */\n\n\nvar NavigationService =\n/** @class */\nfunction () {\n  function NavigationService(onNavigate) {\n    this.onNavigate = onNavigate;\n  }\n\n  NavigationService.prototype.navigate = function (event, rtl) {\n    var keyCode = event.keyCode;\n    var action;\n\n    switch (keyCode) {\n      case Keys.left:\n        action = !rtl ? NavigationAction.Previous : NavigationAction.Next;\n        break;\n\n      case Keys.up:\n        action = NavigationAction.Previous;\n        break;\n\n      case Keys.right:\n        action = !rtl ? NavigationAction.Next : NavigationAction.Previous;\n        break;\n\n      case Keys.down:\n        action = NavigationAction.Next;\n        break;\n\n      case Keys.space:\n        action = NavigationAction.Toggle;\n        break;\n\n      case Keys.enter:\n        action = NavigationAction.Toggle;\n        break;\n\n      default:\n        action = null;\n        break;\n    }\n\n    if (action !== null) {\n      event.preventDefault();\n      this.onNavigate(action);\n    }\n  };\n\n  return NavigationService;\n}();\n\nexport { NavigationService };","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-layout/dist/es/panelbar/services/navigationService.js"],"names":["Keys","NavigationAction","NavigationService","onNavigate","prototype","navigate","event","rtl","keyCode","action","left","Previous","Next","up","right","down","space","Toggle","enter","preventDefault"],"mappings":"AAAA,SAASA,IAAT,QAAqB,8BAArB;AACA;AACA;AACA;;AACA,OAAO,IAAIC,gBAAJ;;AACP,CAAC,UAAUA,gBAAV,EAA4B;AACzBA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,QAAD,CAAhB,GAA6B,CAA9B,CAAhB,GAAmD,QAAnD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,MAAD,CAAhB,GAA2B,CAA5B,CAAhB,GAAiD,MAAjD;AACAA,EAAAA,gBAAgB,CAACA,gBAAgB,CAAC,UAAD,CAAhB,GAA+B,CAAhC,CAAhB,GAAqD,UAArD;AACH,CAJD,EAIGA,gBAAgB,KAAKA,gBAAgB,GAAG,EAAxB,CAJnB;AAKA;AACA;AACA;;;AACA,IAAIC,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACnC,SAAKA,UAAL,GAAkBA,UAAlB;AACH;;AACDD,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,QAA5B,GAAuC,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACzD,QAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AACA,QAAIC,MAAJ;;AACA,YAAQD,OAAR;AACI,WAAKR,IAAI,CAACU,IAAV;AACID,QAAAA,MAAM,GAAG,CAACF,GAAD,GAAON,gBAAgB,CAACU,QAAxB,GAAmCV,gBAAgB,CAACW,IAA7D;AACA;;AACJ,WAAKZ,IAAI,CAACa,EAAV;AACIJ,QAAAA,MAAM,GAAGR,gBAAgB,CAACU,QAA1B;AACA;;AACJ,WAAKX,IAAI,CAACc,KAAV;AACIL,QAAAA,MAAM,GAAG,CAACF,GAAD,GAAON,gBAAgB,CAACW,IAAxB,GAA+BX,gBAAgB,CAACU,QAAzD;AACA;;AACJ,WAAKX,IAAI,CAACe,IAAV;AACIN,QAAAA,MAAM,GAAGR,gBAAgB,CAACW,IAA1B;AACA;;AACJ,WAAKZ,IAAI,CAACgB,KAAV;AACIP,QAAAA,MAAM,GAAGR,gBAAgB,CAACgB,MAA1B;AACA;;AACJ,WAAKjB,IAAI,CAACkB,KAAV;AACIT,QAAAA,MAAM,GAAGR,gBAAgB,CAACgB,MAA1B;AACA;;AACJ;AACIR,QAAAA,MAAM,GAAG,IAAT;AACA;AArBR;;AAuBA,QAAIA,MAAM,KAAK,IAAf,EAAqB;AACjBH,MAAAA,KAAK,CAACa,cAAN;AACA,WAAKhB,UAAL,CAAgBM,MAAhB;AACH;AACJ,GA9BD;;AA+BA,SAAOP,iBAAP;AACH,CApCsC,EAAvC;;AAqCA,SAASA,iBAAT","sourcesContent":["import { Keys } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nexport var NavigationAction;\n(function (NavigationAction) {\n    NavigationAction[NavigationAction[\"Toggle\"] = 0] = \"Toggle\";\n    NavigationAction[NavigationAction[\"Next\"] = 1] = \"Next\";\n    NavigationAction[NavigationAction[\"Previous\"] = 2] = \"Previous\";\n})(NavigationAction || (NavigationAction = {}));\n/**\n * @hidden\n */\nvar NavigationService = /** @class */ (function () {\n    function NavigationService(onNavigate) {\n        this.onNavigate = onNavigate;\n    }\n    NavigationService.prototype.navigate = function (event, rtl) {\n        var keyCode = event.keyCode;\n        var action;\n        switch (keyCode) {\n            case Keys.left:\n                action = !rtl ? NavigationAction.Previous : NavigationAction.Next;\n                break;\n            case Keys.up:\n                action = NavigationAction.Previous;\n                break;\n            case Keys.right:\n                action = !rtl ? NavigationAction.Next : NavigationAction.Previous;\n                break;\n            case Keys.down:\n                action = NavigationAction.Next;\n                break;\n            case Keys.space:\n                action = NavigationAction.Toggle;\n                break;\n            case Keys.enter:\n                action = NavigationAction.Toggle;\n                break;\n            default:\n                action = null;\n                break;\n        }\n        if (action !== null) {\n            event.preventDefault();\n            this.onNavigate(action);\n        }\n    };\n    return NavigationService;\n}());\nexport { NavigationService };\n"]},"metadata":{},"sourceType":"module"}