{"ast":null,"code":"'use strict';\n\nmodule.exports = powershell;\npowershell.displayName = 'powershell';\npowershell.aliases = [];\n\nfunction powershell(Prism) {\n  ;\n\n  (function (Prism) {\n    var powershell = Prism.languages.powershell = {\n      comment: [{\n        pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n        lookbehind: true\n      }, {\n        pattern: /(^|[^`])#.*/,\n        lookbehind: true\n      }],\n      string: [{\n        pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n        greedy: true,\n        inside: {\n          function: {\n            // Allow for one level of nesting\n            pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n            lookbehind: true,\n            // Populated at end of file\n            inside: {}\n          }\n        }\n      }, {\n        pattern: /'(?:[^']|'')*'/,\n        greedy: true\n      }],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:true|false)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [/\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i, /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern: /(\\W?)(?:!|-(?:eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }; // Variable interpolation inside strings, and nested expressions\n\n    var stringInside = powershell.string[0].inside;\n    stringInside.boolean = powershell.boolean;\n    stringInside.variable = powershell.variable;\n    stringInside.function.inside = powershell;\n  })(Prism);\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/powershell.js"],"names":["module","exports","powershell","displayName","aliases","Prism","languages","comment","pattern","lookbehind","string","greedy","inside","function","namespace","boolean","variable","keyword","operator","punctuation","stringInside"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,WAAX,GAAyB,YAAzB;AACAD,UAAU,CAACE,OAAX,GAAqB,EAArB;;AACA,SAASF,UAAT,CAAoBG,KAApB,EAA2B;AACzB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB,QAAIH,UAAU,GAAIG,KAAK,CAACC,SAAN,CAAgBJ,UAAhB,GAA6B;AAC7CK,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,OAAO,EAAE,sBADX;AAEEC,QAAAA,UAAU,EAAE;AAFd,OADO,EAKP;AACED,QAAAA,OAAO,EAAE,aADX;AAEEC,QAAAA,UAAU,EAAE;AAFd,OALO,CADoC;AAW7CC,MAAAA,MAAM,EAAE,CACN;AACEF,QAAAA,OAAO,EAAE,sBADX;AAEEG,QAAAA,MAAM,EAAE,IAFV;AAGEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAE;AACR;AACAL,YAAAA,OAAO,EAAE,sDAFD;AAGRC,YAAAA,UAAU,EAAE,IAHJ;AAIR;AACAG,YAAAA,MAAM,EAAE;AALA;AADJ;AAHV,OADM,EAcN;AACEJ,QAAAA,OAAO,EAAE,gBADX;AAEEG,QAAAA,MAAM,EAAE;AAFV,OAdM,CAXqC;AA8B7C;AACA;AACAG,MAAAA,SAAS,EAAE,oDAhCkC;AAiC7CC,MAAAA,OAAO,EAAE,qBAjCoC;AAkC7CC,MAAAA,QAAQ,EAAE,SAlCmC;AAmC7C;AACA;AACA;AACAH,MAAAA,QAAQ,EAAE,CACR,urBADQ,EAER,ucAFQ,CAtCmC;AA0C7C;AACAI,MAAAA,OAAO,EACL,iPA5C2C;AA6C7CC,MAAAA,QAAQ,EAAE;AACRV,QAAAA,OAAO,EACL,sJAFM;AAGRC,QAAAA,UAAU,EAAE;AAHJ,OA7CmC;AAkD7CU,MAAAA,WAAW,EAAE;AAlDgC,KAA/C,CADiB,CAoDd;;AACH,QAAIC,YAAY,GAAGlB,UAAU,CAACQ,MAAX,CAAkB,CAAlB,EAAqBE,MAAxC;AACAQ,IAAAA,YAAY,CAACL,OAAb,GAAuBb,UAAU,CAACa,OAAlC;AACAK,IAAAA,YAAY,CAACJ,QAAb,GAAwBd,UAAU,CAACc,QAAnC;AACAI,IAAAA,YAAY,CAACP,QAAb,CAAsBD,MAAtB,GAA+BV,UAA/B;AACD,GAzDA,EAyDEG,KAzDF;AA0DF","sourcesContent":["'use strict'\r\n\r\nmodule.exports = powershell\r\npowershell.displayName = 'powershell'\r\npowershell.aliases = []\r\nfunction powershell(Prism) {\r\n  ;(function (Prism) {\r\n    var powershell = (Prism.languages.powershell = {\r\n      comment: [\r\n        {\r\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\r\n          lookbehind: true\r\n        },\r\n        {\r\n          pattern: /(^|[^`])#.*/,\r\n          lookbehind: true\r\n        }\r\n      ],\r\n      string: [\r\n        {\r\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\r\n          greedy: true,\r\n          inside: {\r\n            function: {\r\n              // Allow for one level of nesting\r\n              pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\r\n              lookbehind: true,\r\n              // Populated at end of file\r\n              inside: {}\r\n            }\r\n          }\r\n        },\r\n        {\r\n          pattern: /'(?:[^']|'')*'/,\r\n          greedy: true\r\n        }\r\n      ],\r\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\r\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\r\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\r\n      boolean: /\\$(?:true|false)\\b/i,\r\n      variable: /\\$\\w+\\b/,\r\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\r\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\r\n      function: [\r\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\r\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\r\n      ],\r\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\r\n      keyword:\r\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\r\n      operator: {\r\n        pattern:\r\n          /(\\W?)(?:!|-(?:eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\r\n        lookbehind: true\r\n      },\r\n      punctuation: /[|{}[\\];(),.]/\r\n    }) // Variable interpolation inside strings, and nested expressions\r\n    var stringInside = powershell.string[0].inside\r\n    stringInside.boolean = powershell.boolean\r\n    stringInside.variable = powershell.variable\r\n    stringInside.function.inside = powershell\r\n  })(Prism)\r\n}\r\n"]},"metadata":{},"sourceType":"script"}