{"ast":null,"code":"'use strict';\n\nmodule.exports = monkey;\nmonkey.displayName = 'monkey';\nmonkey.aliases = [];\n\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [{\n      pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n      greedy: true\n    }, {\n      pattern: /'.+/,\n      greedy: true\n    }],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword: /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  };\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/monkey.js"],"names":["module","exports","monkey","displayName","aliases","Prism","languages","string","comment","pattern","greedy","preprocessor","lookbehind","alias","function","number","keyword","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,IAAAA,MAAM,EAAE,aADe;AAEvBC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,OAAO,EAAE,wBADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KADO,EAKP;AACED,MAAAA,OAAO,EAAE,KADX;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALO,CAFc;AAYvBC,IAAAA,YAAY,EAAE;AACZF,MAAAA,OAAO,EAAE,eADG;AAEZG,MAAAA,UAAU,EAAE,IAFA;AAGZC,MAAAA,KAAK,EAAE;AAHK,KAZS;AAiBvBC,IAAAA,QAAQ,EAAE,aAjBa;AAkBvB,iBAAa;AACXL,MAAAA,OAAO,EAAE,YADE;AAEXG,MAAAA,UAAU,EAAE,IAFD;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAlBU;AAuBvBE,IAAAA,MAAM,EAAE;AACNN,MAAAA,OAAO,EACL,oEAFI;AAGNG,MAAAA,UAAU,EAAE;AAHN,KAvBe;AA4BvBI,IAAAA,OAAO,EACL,sXA7BqB;AA8BvBC,IAAAA,QAAQ,EACN,+EA/BqB;AAgCvBC,IAAAA,WAAW,EAAE;AAhCU,GAAzB;AAkCD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = monkey\r\nmonkey.displayName = 'monkey'\r\nmonkey.aliases = []\r\nfunction monkey(Prism) {\r\n  Prism.languages.monkey = {\r\n    string: /\"[^\"\\r\\n]*\"/,\r\n    comment: [\r\n      {\r\n        pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\r\n        greedy: true\r\n      },\r\n      {\r\n        pattern: /'.+/,\r\n        greedy: true\r\n      }\r\n    ],\r\n    preprocessor: {\r\n      pattern: /(^[ \\t]*)#.+/m,\r\n      lookbehind: true,\r\n      alias: 'comment'\r\n    },\r\n    function: /\\b\\w+(?=\\()/,\r\n    'type-char': {\r\n      pattern: /(\\w)[?%#$]/,\r\n      lookbehind: true,\r\n      alias: 'variable'\r\n    },\r\n    number: {\r\n      pattern:\r\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\r\n      lookbehind: true\r\n    },\r\n    keyword:\r\n      /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\r\n    operator:\r\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\r\n    punctuation: /[.,:;()\\[\\]]/\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}