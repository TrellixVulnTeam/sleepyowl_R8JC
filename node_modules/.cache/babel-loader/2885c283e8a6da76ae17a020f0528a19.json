{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { classNames } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\n/**\n * Represents the BreadcrumbDelimiter component.\n */\n\nexport var BreadcrumbDelimiter = React.forwardRef(function (props, ref) {\n  validatePackage(packageMetadata);\n  var target = React.useRef(null);\n  var breadcrumbDelimiterRef = React.useRef(null);\n  React.useImperativeHandle(target, function () {\n    return {\n      element: breadcrumbDelimiterRef.current,\n      props: props\n    };\n  });\n  React.useImperativeHandle(ref, function () {\n    return target.current;\n  });\n  return React.createElement(\"span\", {\n    ref: breadcrumbDelimiterRef,\n    id: props.id,\n    tabIndex: props.tabIndex,\n    style: props.style,\n    className: classNames('k-icon k-i-arrow-chevron-right k-breadcrumb-delimiter-icon', props.className)\n  });\n});\nvar propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  tabIndex: PropTypes.number\n};\nBreadcrumbDelimiter.displayName = 'KendoReactBreadcrumbDelimiter'; // TODO: delete casting when @types/react is updated!\n\nBreadcrumbDelimiter.propTypes = propTypes;","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/BreadcrumbDelimiter.js"],"names":["React","PropTypes","validatePackage","classNames","packageMetadata","BreadcrumbDelimiter","forwardRef","props","ref","target","useRef","breadcrumbDelimiterRef","useImperativeHandle","element","current","createElement","id","tabIndex","style","className","propTypes","string","object","number","displayName"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA;AACA;AACA;;AACA,OAAO,IAAIC,mBAAmB,GAAGL,KAAK,CAACM,UAAN,CAAiB,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACpEN,EAAAA,eAAe,CAACE,eAAD,CAAf;AACA,MAAIK,MAAM,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAb,CAAb;AACA,MAAIC,sBAAsB,GAAGX,KAAK,CAACU,MAAN,CAAa,IAAb,CAA7B;AACAV,EAAAA,KAAK,CAACY,mBAAN,CAA0BH,MAA1B,EAAkC,YAAY;AAAE,WAAQ;AACpDI,MAAAA,OAAO,EAAEF,sBAAsB,CAACG,OADoB;AAEpDP,MAAAA,KAAK,EAAEA;AAF6C,KAAR;AAG3C,GAHL;AAIAP,EAAAA,KAAK,CAACY,mBAAN,CAA0BJ,GAA1B,EAA+B,YAAY;AAAE,WAAOC,MAAM,CAACK,OAAd;AAAwB,GAArE;AACA,SAAQd,KAAK,CAACe,aAAN,CAAoB,MAApB,EAA4B;AAAEP,IAAAA,GAAG,EAAEG,sBAAP;AAA+BK,IAAAA,EAAE,EAAET,KAAK,CAACS,EAAzC;AAA6CC,IAAAA,QAAQ,EAAEV,KAAK,CAACU,QAA7D;AAAuEC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAApF;AAA2FC,IAAAA,SAAS,EAAEhB,UAAU,CAAC,4DAAD,EAA+DI,KAAK,CAACY,SAArE;AAAhH,GAA5B,CAAR;AACH,CAVgC,CAA1B;AAWP,IAAIC,SAAS,GAAG;AACZJ,EAAAA,EAAE,EAAEf,SAAS,CAACoB,MADF;AAEZF,EAAAA,SAAS,EAAElB,SAAS,CAACoB,MAFT;AAGZH,EAAAA,KAAK,EAAEjB,SAAS,CAACqB,MAHL;AAIZL,EAAAA,QAAQ,EAAEhB,SAAS,CAACsB;AAJR,CAAhB;AAMAlB,mBAAmB,CAACmB,WAApB,GAAkC,+BAAlC,C,CACA;;AACAnB,mBAAmB,CAACe,SAApB,GAAgCA,SAAhC","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { classNames } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\n/**\n * Represents the BreadcrumbDelimiter component.\n */\nexport var BreadcrumbDelimiter = React.forwardRef(function (props, ref) {\n    validatePackage(packageMetadata);\n    var target = React.useRef(null);\n    var breadcrumbDelimiterRef = React.useRef(null);\n    React.useImperativeHandle(target, function () { return ({\n        element: breadcrumbDelimiterRef.current,\n        props: props\n    }); });\n    React.useImperativeHandle(ref, function () { return target.current; });\n    return (React.createElement(\"span\", { ref: breadcrumbDelimiterRef, id: props.id, tabIndex: props.tabIndex, style: props.style, className: classNames('k-icon k-i-arrow-chevron-right k-breadcrumb-delimiter-icon', props.className) }));\n});\nvar propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    style: PropTypes.object,\n    tabIndex: PropTypes.number\n};\nBreadcrumbDelimiter.displayName = 'KendoReactBreadcrumbDelimiter';\n// TODO: delete casting when @types/react is updated!\nBreadcrumbDelimiter.propTypes = propTypes;\n"]},"metadata":{},"sourceType":"module"}