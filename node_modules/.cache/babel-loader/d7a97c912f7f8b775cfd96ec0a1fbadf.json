{"ast":null,"code":"'use strict';\n\nmodule.exports = gn;\ngn.displayName = 'gn';\ngn.aliases = ['gni'];\n\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern: /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_out_dir|target_os)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  };\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside['expression'].inside = Prism.languages.gn;\n  Prism.languages.gni = Prism.languages.gn;\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/gn.js"],"names":["module","exports","gn","displayName","aliases","Prism","languages","comment","pattern","greedy","lookbehind","inside","interpolation","number","variable","alias","expression","string","keyword","boolean","function","constant","operator","punctuation","gni"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,EAAjB;AACAA,EAAE,CAACC,WAAH,GAAiB,IAAjB;AACAD,EAAE,CAACE,OAAH,GAAa,CAAC,KAAD,CAAb;;AACA,SAASF,EAAT,CAAYG,KAAZ,EAAmB;AACjB;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,EAAhB,GAAqB;AACnBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADU;AAKnB,sBAAkB;AAChBD,MAAAA,OAAO,EAAE,iCADO;AAEhBE,MAAAA,UAAU,EAAE,IAFI;AAGhBD,MAAAA,MAAM,EAAE,IAHQ;AAIhBE,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAE;AACbJ,UAAAA,OAAO,EACL,yEAFW;AAGbE,UAAAA,UAAU,EAAE,IAHC;AAIbC,UAAAA,MAAM,EAAE;AACNE,YAAAA,MAAM,EAAE,iBADF;AAENC,YAAAA,QAAQ,EAAE,SAFJ;AAGN,yCAA6B;AAC3BN,cAAAA,OAAO,EAAE,WADkB;AAE3BO,cAAAA,KAAK,EAAE;AAFoB,aAHvB;AAONC,YAAAA,UAAU,EAAE;AACVR,cAAAA,OAAO,EAAE,SADC;AAEVG,cAAAA,MAAM,EAAE,IAFE,CAEG;;AAFH;AAPN;AAJK,SADT;AAkBNM,QAAAA,MAAM,EAAE;AAlBF;AAJQ,KALC;AA8BnBC,IAAAA,OAAO,EAAE,iBA9BU;AA+BnBC,IAAAA,OAAO,EAAE,oBA/BU;AAgCnB,wBAAoB;AAClB;AACAX,MAAAA,OAAO,EACL,kFAHgB;AAIlBO,MAAAA,KAAK,EAAE;AAJW,KAhCD;AAsCnBK,IAAAA,QAAQ,EAAE,uBAtCS;AAuCnBC,IAAAA,QAAQ,EACN,iLAxCiB;AAyCnBR,IAAAA,MAAM,EAAE,WAzCW;AA0CnBS,IAAAA,QAAQ,EAAE,oBA1CS;AA2CnBC,IAAAA,WAAW,EAAE;AA3CM,GAArB;AA6CAlB,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,EAAhB,CAAmB,gBAAnB,EAAqCS,MAArC,CAA4C,eAA5C,EAA6DA,MAA7D,CACE,YADF,EAEEA,MAFF,GAEWN,KAAK,CAACC,SAAN,CAAgBJ,EAF3B;AAGAG,EAAAA,KAAK,CAACC,SAAN,CAAgBkB,GAAhB,GAAsBnB,KAAK,CAACC,SAAN,CAAgBJ,EAAtC;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = gn\r\ngn.displayName = 'gn'\r\ngn.aliases = ['gni']\r\nfunction gn(Prism) {\r\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\r\n  Prism.languages.gn = {\r\n    comment: {\r\n      pattern: /#.*/,\r\n      greedy: true\r\n    },\r\n    'string-literal': {\r\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\r\n      lookbehind: true,\r\n      greedy: true,\r\n      inside: {\r\n        interpolation: {\r\n          pattern:\r\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\r\n          lookbehind: true,\r\n          inside: {\r\n            number: /^\\$0x[\\s\\S]{2}$/,\r\n            variable: /^\\$\\w+$/,\r\n            'interpolation-punctuation': {\r\n              pattern: /^\\$\\{|\\}$/,\r\n              alias: 'punctuation'\r\n            },\r\n            expression: {\r\n              pattern: /[\\s\\S]+/,\r\n              inside: null // see below\r\n            }\r\n          }\r\n        },\r\n        string: /[\\s\\S]+/\r\n      }\r\n    },\r\n    keyword: /\\b(?:else|if)\\b/,\r\n    boolean: /\\b(?:true|false)\\b/,\r\n    'builtin-function': {\r\n      // a few functions get special highlighting to improve readability\r\n      pattern:\r\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\r\n      alias: 'keyword'\r\n    },\r\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\r\n    constant:\r\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_out_dir|target_os)\\b/,\r\n    number: /-?\\b\\d+\\b/,\r\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\r\n    punctuation: /[(){}[\\],.]/\r\n  }\r\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\r\n    'expression'\r\n  ].inside = Prism.languages.gn\r\n  Prism.languages.gni = Prism.languages.gn\r\n}\r\n"]},"metadata":{},"sourceType":"script"}