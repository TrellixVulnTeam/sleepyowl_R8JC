{"ast":null,"code":"import * as React from 'react';\nimport { isArrayEqual } from '../util';\n/**\n * @hidden\n */\n\nvar SelectionService =\n/** @class */\nfunction () {\n  function SelectionService(onSelectCallback, onFocusCallback, expandMode) {\n    var _this = this;\n\n    this.flatChildren = function (children, flattenChildren) {\n      if (flattenChildren === void 0) {\n        flattenChildren = [];\n      }\n\n      React.Children.forEach(children, function (child) {\n        if (child && child.props && !child.props.disabled) {\n          flattenChildren.push(child);\n\n          if (child.props.children) {\n            _this.flatChildren(child.props.children, flattenChildren);\n          }\n        }\n      });\n      return flattenChildren;\n    };\n\n    this.flatVisibleChildren = function (children, flattenVisibleChildren) {\n      if (flattenVisibleChildren === void 0) {\n        flattenVisibleChildren = [];\n      }\n\n      React.Children.forEach(children, function (child) {\n        if (child && child.props && !child.props.disabled && (child.props.expanded || child.props.parentExpanded)) {\n          flattenVisibleChildren.push(child);\n\n          if (child.props.children) {\n            _this.flatVisibleChildren(child.props.children, flattenVisibleChildren);\n          }\n        }\n      });\n      return flattenVisibleChildren;\n    };\n\n    this.onSelect = onSelectCallback;\n    this.onFocus = onFocusCallback;\n    this.expandMode = expandMode;\n  }\n\n  SelectionService.prototype.select = function (uniquePrivateKey, children, expanded) {\n    var flattenChildren = this.flatChildren(React.Children.toArray(children));\n    var selectedChild;\n    var newExpanded;\n    flattenChildren.forEach(function (child) {\n      if (child.props.uniquePrivateKey === uniquePrivateKey) {\n        selectedChild = child;\n      }\n    });\n\n    switch (this.expandMode) {\n      case 'single':\n        newExpanded = selectedChild.props.parentUniquePrivateKey.concat([selectedChild.props.uniquePrivateKey]);\n\n        if (isArrayEqual(expanded, newExpanded)) {\n          if (selectedChild.props.parentUniquePrivateKey) {\n            newExpanded = selectedChild.props.parentUniquePrivateKey.slice();\n          } else {\n            newExpanded = [];\n          }\n        }\n\n        break;\n\n      case 'multiple':\n        newExpanded = expanded.slice();\n        var index = newExpanded.indexOf(selectedChild.props.uniquePrivateKey);\n        index === -1 ? newExpanded.push(selectedChild.props.uniquePrivateKey) : newExpanded.splice(index, 1);\n        break;\n\n      default:\n        newExpanded = expanded.slice();\n        break;\n    }\n\n    this.onSelect(selectedChild, newExpanded);\n  };\n\n  SelectionService.prototype.focus = function (currentFocus, step, children) {\n    var flattenChildren = this.flatVisibleChildren(React.Children.toArray(children));\n    var focusedChild;\n    flattenChildren.forEach(function (child, ixd) {\n      if (child.props.uniquePrivateKey === currentFocus) {\n        var index = ixd + step < 0 ? 0 : ixd + step >= flattenChildren.length ? flattenChildren.length - 1 : ixd + step;\n        focusedChild = flattenChildren[index];\n      }\n    });\n    this.onFocus(focusedChild);\n  };\n\n  SelectionService.prototype.setExpandMode = function (expandMode) {\n    this.expandMode = expandMode;\n  };\n\n  return SelectionService;\n}();\n\nexport { SelectionService };","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-layout/dist/es/panelbar/services/selectionService.js"],"names":["React","isArrayEqual","SelectionService","onSelectCallback","onFocusCallback","expandMode","_this","flatChildren","children","flattenChildren","Children","forEach","child","props","disabled","push","flatVisibleChildren","flattenVisibleChildren","expanded","parentExpanded","onSelect","onFocus","prototype","select","uniquePrivateKey","toArray","selectedChild","newExpanded","parentUniquePrivateKey","concat","slice","index","indexOf","splice","focus","currentFocus","step","focusedChild","ixd","length","setExpandMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB;AAAG;AAAe,YAAY;AAC9C,WAASA,gBAAT,CAA0BC,gBAA1B,EAA4CC,eAA5C,EAA6DC,UAA7D,EAAyE;AACrE,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKC,YAAL,GAAoB,UAAUC,QAAV,EAAoBC,eAApB,EAAqC;AACrD,UAAIA,eAAe,KAAK,KAAK,CAA7B,EAAgC;AAAEA,QAAAA,eAAe,GAAG,EAAlB;AAAuB;;AACzDT,MAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiC,UAAUI,KAAV,EAAiB;AAC9C,YAAIA,KAAK,IAAIA,KAAK,CAACC,KAAf,IAAwB,CAACD,KAAK,CAACC,KAAN,CAAYC,QAAzC,EAAmD;AAC/CL,UAAAA,eAAe,CAACM,IAAhB,CAAqBH,KAArB;;AACA,cAAIA,KAAK,CAACC,KAAN,CAAYL,QAAhB,EAA0B;AACtBF,YAAAA,KAAK,CAACC,YAAN,CAAmBK,KAAK,CAACC,KAAN,CAAYL,QAA/B,EAAyCC,eAAzC;AACH;AACJ;AACJ,OAPD;AAQA,aAAOA,eAAP;AACH,KAXD;;AAYA,SAAKO,mBAAL,GAA2B,UAAUR,QAAV,EAAoBS,sBAApB,EAA4C;AACnE,UAAIA,sBAAsB,KAAK,KAAK,CAApC,EAAuC;AAAEA,QAAAA,sBAAsB,GAAG,EAAzB;AAA8B;;AACvEjB,MAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBH,QAAvB,EAAiC,UAAUI,KAAV,EAAiB;AAC9C,YAAIA,KAAK,IAAIA,KAAK,CAACC,KAAf,IAAwB,CAACD,KAAK,CAACC,KAAN,CAAYC,QAArC,KAAkDF,KAAK,CAACC,KAAN,CAAYK,QAAZ,IAAwBN,KAAK,CAACC,KAAN,CAAYM,cAAtF,CAAJ,EAA2G;AACvGF,UAAAA,sBAAsB,CAACF,IAAvB,CAA4BH,KAA5B;;AACA,cAAIA,KAAK,CAACC,KAAN,CAAYL,QAAhB,EAA0B;AACtBF,YAAAA,KAAK,CAACU,mBAAN,CAA0BJ,KAAK,CAACC,KAAN,CAAYL,QAAtC,EAAgDS,sBAAhD;AACH;AACJ;AACJ,OAPD;AAQA,aAAOA,sBAAP;AACH,KAXD;;AAYA,SAAKG,QAAL,GAAgBjB,gBAAhB;AACA,SAAKkB,OAAL,GAAejB,eAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AACDH,EAAAA,gBAAgB,CAACoB,SAAjB,CAA2BC,MAA3B,GAAoC,UAAUC,gBAAV,EAA4BhB,QAA5B,EAAsCU,QAAtC,EAAgD;AAChF,QAAIT,eAAe,GAAG,KAAKF,YAAL,CAAkBP,KAAK,CAACU,QAAN,CAAee,OAAf,CAAuBjB,QAAvB,CAAlB,CAAtB;AACA,QAAIkB,aAAJ;AACA,QAAIC,WAAJ;AACAlB,IAAAA,eAAe,CAACE,OAAhB,CAAwB,UAAUC,KAAV,EAAiB;AACrC,UAAIA,KAAK,CAACC,KAAN,CAAYW,gBAAZ,KAAiCA,gBAArC,EAAuD;AACnDE,QAAAA,aAAa,GAAGd,KAAhB;AACH;AACJ,KAJD;;AAKA,YAAQ,KAAKP,UAAb;AACI,WAAK,QAAL;AACIsB,QAAAA,WAAW,GAAGD,aAAa,CAACb,KAAd,CAAoBe,sBAApB,CAA2CC,MAA3C,CAAkD,CAACH,aAAa,CAACb,KAAd,CAAoBW,gBAArB,CAAlD,CAAd;;AACA,YAAIvB,YAAY,CAACiB,QAAD,EAAWS,WAAX,CAAhB,EAAyC;AACrC,cAAID,aAAa,CAACb,KAAd,CAAoBe,sBAAxB,EAAgD;AAC5CD,YAAAA,WAAW,GAAGD,aAAa,CAACb,KAAd,CAAoBe,sBAApB,CAA2CE,KAA3C,EAAd;AACH,WAFD,MAGK;AACDH,YAAAA,WAAW,GAAG,EAAd;AACH;AACJ;;AACD;;AACJ,WAAK,UAAL;AACIA,QAAAA,WAAW,GAAGT,QAAQ,CAACY,KAAT,EAAd;AACA,YAAIC,KAAK,GAAGJ,WAAW,CAACK,OAAZ,CAAoBN,aAAa,CAACb,KAAd,CAAoBW,gBAAxC,CAAZ;AACAO,QAAAA,KAAK,KAAK,CAAC,CAAX,GAAeJ,WAAW,CAACZ,IAAZ,CAAiBW,aAAa,CAACb,KAAd,CAAoBW,gBAArC,CAAf,GAAwEG,WAAW,CAACM,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B,CAAxE;AACA;;AACJ;AACIJ,QAAAA,WAAW,GAAGT,QAAQ,CAACY,KAAT,EAAd;AACA;AAnBR;;AAqBA,SAAKV,QAAL,CAAcM,aAAd,EAA6BC,WAA7B;AACH,GA/BD;;AAgCAzB,EAAAA,gBAAgB,CAACoB,SAAjB,CAA2BY,KAA3B,GAAmC,UAAUC,YAAV,EAAwBC,IAAxB,EAA8B5B,QAA9B,EAAwC;AACvE,QAAIC,eAAe,GAAG,KAAKO,mBAAL,CAAyBhB,KAAK,CAACU,QAAN,CAAee,OAAf,CAAuBjB,QAAvB,CAAzB,CAAtB;AACA,QAAI6B,YAAJ;AACA5B,IAAAA,eAAe,CAACE,OAAhB,CAAwB,UAAUC,KAAV,EAAiB0B,GAAjB,EAAsB;AAC1C,UAAI1B,KAAK,CAACC,KAAN,CAAYW,gBAAZ,KAAiCW,YAArC,EAAmD;AAC/C,YAAIJ,KAAK,GAAGO,GAAG,GAAGF,IAAN,GAAa,CAAb,GACR,CADQ,GACJE,GAAG,GAAGF,IAAN,IAAc3B,eAAe,CAAC8B,MAA9B,GACF9B,eAAe,CAAC8B,MAAhB,GAAyB,CADvB,GAEFD,GAAG,GAAGF,IAHZ;AAIAC,QAAAA,YAAY,GAAG5B,eAAe,CAACsB,KAAD,CAA9B;AACH;AACJ,KARD;AASA,SAAKV,OAAL,CAAagB,YAAb;AACH,GAbD;;AAcAnC,EAAAA,gBAAgB,CAACoB,SAAjB,CAA2BkB,aAA3B,GAA2C,UAAUnC,UAAV,EAAsB;AAC7D,SAAKA,UAAL,GAAkBA,UAAlB;AACH,GAFD;;AAGA,SAAOH,gBAAP;AACH,CAjFqC,EAAtC;;AAkFA,SAASA,gBAAT","sourcesContent":["import * as React from 'react';\nimport { isArrayEqual } from '../util';\n/**\n * @hidden\n */\nvar SelectionService = /** @class */ (function () {\n    function SelectionService(onSelectCallback, onFocusCallback, expandMode) {\n        var _this = this;\n        this.flatChildren = function (children, flattenChildren) {\n            if (flattenChildren === void 0) { flattenChildren = []; }\n            React.Children.forEach(children, function (child) {\n                if (child && child.props && !child.props.disabled) {\n                    flattenChildren.push(child);\n                    if (child.props.children) {\n                        _this.flatChildren(child.props.children, flattenChildren);\n                    }\n                }\n            });\n            return flattenChildren;\n        };\n        this.flatVisibleChildren = function (children, flattenVisibleChildren) {\n            if (flattenVisibleChildren === void 0) { flattenVisibleChildren = []; }\n            React.Children.forEach(children, function (child) {\n                if (child && child.props && !child.props.disabled && (child.props.expanded || child.props.parentExpanded)) {\n                    flattenVisibleChildren.push(child);\n                    if (child.props.children) {\n                        _this.flatVisibleChildren(child.props.children, flattenVisibleChildren);\n                    }\n                }\n            });\n            return flattenVisibleChildren;\n        };\n        this.onSelect = onSelectCallback;\n        this.onFocus = onFocusCallback;\n        this.expandMode = expandMode;\n    }\n    SelectionService.prototype.select = function (uniquePrivateKey, children, expanded) {\n        var flattenChildren = this.flatChildren(React.Children.toArray(children));\n        var selectedChild;\n        var newExpanded;\n        flattenChildren.forEach(function (child) {\n            if (child.props.uniquePrivateKey === uniquePrivateKey) {\n                selectedChild = child;\n            }\n        });\n        switch (this.expandMode) {\n            case 'single':\n                newExpanded = selectedChild.props.parentUniquePrivateKey.concat([selectedChild.props.uniquePrivateKey]);\n                if (isArrayEqual(expanded, newExpanded)) {\n                    if (selectedChild.props.parentUniquePrivateKey) {\n                        newExpanded = selectedChild.props.parentUniquePrivateKey.slice();\n                    }\n                    else {\n                        newExpanded = [];\n                    }\n                }\n                break;\n            case 'multiple':\n                newExpanded = expanded.slice();\n                var index = newExpanded.indexOf(selectedChild.props.uniquePrivateKey);\n                index === -1 ? newExpanded.push(selectedChild.props.uniquePrivateKey) : newExpanded.splice(index, 1);\n                break;\n            default:\n                newExpanded = expanded.slice();\n                break;\n        }\n        this.onSelect(selectedChild, newExpanded);\n    };\n    SelectionService.prototype.focus = function (currentFocus, step, children) {\n        var flattenChildren = this.flatVisibleChildren(React.Children.toArray(children));\n        var focusedChild;\n        flattenChildren.forEach(function (child, ixd) {\n            if (child.props.uniquePrivateKey === currentFocus) {\n                var index = ixd + step < 0 ?\n                    0 : ixd + step >= flattenChildren.length\n                    ? flattenChildren.length - 1\n                    : ixd + step;\n                focusedChild = flattenChildren[index];\n            }\n        });\n        this.onFocus(focusedChild);\n    };\n    SelectionService.prototype.setExpandMode = function (expandMode) {\n        this.expandMode = expandMode;\n    };\n    return SelectionService;\n}());\nexport { SelectionService };\n"]},"metadata":{},"sourceType":"module"}