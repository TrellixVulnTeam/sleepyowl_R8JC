{"ast":null,"code":"var _jsxFileName = \"D:\\\\Rnd\\\\sofia-react-template\\\\src\\\\pages\\\\book\\\\Books.js\";\n// import React from \"react\";\n// import { Col, Row } from \"reactstrap\";\n// import Widget from \"../../components/Widget/Widget\";\n// import { Editor } from \"react-draft-wysiwyg\";\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n// import FroalaEditor from \"react-froala-editor\";\n// import 'froala-editor/css/froala_style.min.css';\n// import 'froala-editor/css/froala_editor.pkgd.min.css';\n// import 'froala-editor/js/plugins.pkgd.min.js';\n// import FroalaEditorComponent from 'react-froala-wysiwyg';\n// const Books = () => {\n//   const str = \"<p>React Froala Editor</p>\";\n//   return (\n//     <div>\n//     </div>\n//   );\n// };\n// export default Books;\nimport React from 'react';\nimport styled from 'styled-components';\nimport MovieItem from './MovieItem';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Books = () => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MovieWrapper, {\n      to: `${process.env.PUBLIC_URL}/movie/${movie.id}`,\n      children: [!loaded ? /*#__PURE__*/_jsxDEV(ImgLoading, {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(MovieImg, {\n        error: error ? 1 : 0,\n        onLoad: () => setLoaded(true),\n        style: !loaded ? {\n          display: 'none'\n        } : {},\n        src: `${baseUrl}w342${movie.poster_path}` // If no image, error will occurr, we set error to true\n        // And only change the src to the nothing svg if it isn't already, to avoid infinite callback\n        ,\n        onError: e => {\n          setError(true);\n\n          if (e.target.src !== `${NothingSvg}`) {\n            e.target.src = `${NothingSvg}`;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DetailsWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RatingsWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Rating, {\n            number: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            children: [movie.vote_average, \" average rating on \", movie.vote_count, \" votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/src/pages/book/Books.js"],"names":["React","styled","MovieItem","Pagination","Books","process","env","PUBLIC_URL","movie","id","loaded","error","setLoaded","display","baseUrl","poster_path","e","setError","target","src","NothingSvg","title","vote_average","vote_count"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAElB,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAEC,QAAC,YAAD;AAAc,MAAA,EAAE,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,UAAW,UAASC,KAAK,CAACC,EAAG,EAA9D;AAAA,iBACI,CAACC,MAAD,gBACC,QAAC,UAAD;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAIG,IALP,eAMG,QAAC,QAAD;AACE,QAAA,KAAK,EAAEC,KAAK,GAAG,CAAH,GAAO,CADrB;AAEE,QAAA,MAAM,EAAE,MAAMC,SAAS,CAAC,IAAD,CAFzB;AAGE,QAAA,KAAK,EAAE,CAACF,MAAD,GAAU;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAAV,GAAgC,EAHzC;AAIE,QAAA,GAAG,EAAG,GAAEC,OAAQ,OAAMN,KAAK,CAACO,WAAY,EAJ1C,CAKE;AACA;AANF;AAOE,QAAA,OAAO,EAAEC,CAAC,IAAI;AACZC,UAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,cAAID,CAAC,CAACE,MAAF,CAASC,GAAT,KAAkB,GAAEC,UAAW,EAAnC,EAAsC;AACpCJ,YAAAA,CAAC,CAACE,MAAF,CAASC,GAAT,GAAgB,GAAEC,UAAW,EAA7B;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,cANH,eAoBG,QAAC,cAAD;AAAA,gCACE,QAAC,KAAD;AAAA,oBAAQZ,KAAK,CAACa;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,cAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAA,uBACGb,KAAK,CAACc,YADT,yBAC0Cd,KAAK,CAACe,UADhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAzCD;;KAAMnB,K;AA2CN,eAAeA,KAAf","sourcesContent":["// import React from \"react\";\r\n// import { Col, Row } from \"reactstrap\";\r\n// import Widget from \"../../components/Widget/Widget\";\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import FroalaEditor from \"react-froala-editor\";\r\n// import 'froala-editor/css/froala_style.min.css';\r\n// import 'froala-editor/css/froala_editor.pkgd.min.css';\r\n// import 'froala-editor/js/plugins.pkgd.min.js';\r\n// import FroalaEditorComponent from 'react-froala-wysiwyg';\r\n// const Books = () => {\r\n//   const str = \"<p>React Froala Editor</p>\";\r\n//   return (\r\n//     <div>\r\n     \r\n      \r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Books;\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport MovieItem from './MovieItem';\r\nimport Pagination from './Pagination';\r\n\r\nconst Books = () => {\r\n\r\n  return (\r\n    <React.Fragment>\r\n     \r\n     <MovieWrapper to={`${process.env.PUBLIC_URL}/movie/${movie.id}`}>\r\n        {!loaded ? (\r\n          <ImgLoading>\r\n            <Loading />\r\n          </ImgLoading>\r\n        ) : null}\r\n        <MovieImg\r\n          error={error ? 1 : 0}\r\n          onLoad={() => setLoaded(true)}\r\n          style={!loaded ? { display: 'none' } : {}}\r\n          src={`${baseUrl}w342${movie.poster_path}`}\r\n          // If no image, error will occurr, we set error to true\r\n          // And only change the src to the nothing svg if it isn't already, to avoid infinite callback\r\n          onError={e => {\r\n            setError(true);\r\n            if (e.target.src !== `${NothingSvg}`) {\r\n              e.target.src = `${NothingSvg}`;\r\n            }\r\n          }}\r\n        />\r\n        <DetailsWrapper>\r\n          <Title>{movie.title}</Title>\r\n          <RatingsWrapper>\r\n            <Rating number=\"1\" />\r\n            <Tooltip>\r\n              {movie.vote_average} average rating on {movie.vote_count} votes\r\n            </Tooltip>\r\n          </RatingsWrapper>\r\n        </DetailsWrapper>\r\n      </MovieWrapper>\r\n        \r\n\r\n      \r\n      {/* <Pagination movies={movies} /> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}