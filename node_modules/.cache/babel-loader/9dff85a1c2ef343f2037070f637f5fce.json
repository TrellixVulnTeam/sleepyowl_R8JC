{"ast":null,"code":"/**\n * @hidden\n */\nvar MouseOverHandler =\n/** @class */\nfunction () {\n  function MouseOverHandler(openOnClick, resetMenu, openItem) {\n    this.openOnClick = openOnClick;\n    this.resetMenu = resetMenu;\n    this.openItem = openItem;\n    this.openOnClick = openOnClick;\n    this.isMouseOverEnabled = openOnClick ? false : true;\n  }\n\n  Object.defineProperty(MouseOverHandler.prototype, \"OpenOnClick\", {\n    set: function (value) {\n      if (Boolean(value) !== Boolean(this.openOnClick)) {\n        this.mouseDown = false;\n        this.isMouseOverEnabled = value ? false : true;\n      }\n\n      this.openOnClick = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MouseOverHandler.prototype.handleItemSelectedViaKeyboard = function () {\n    if (this.openOnClick) {\n      this.isMouseOverEnabled = false;\n      this.resetMenu();\n    }\n  };\n\n  Object.defineProperty(MouseOverHandler.prototype, \"IsMouseOverEnabled\", {\n    get: function () {\n      return this.isMouseOverEnabled;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  MouseOverHandler.prototype.handleItemMouseDown = function () {\n    this.mouseDown = true;\n  };\n\n  MouseOverHandler.prototype.handleItemFocus = function () {\n    // Keep opening on mouse over upon tabbing\n    // and keyboard navigation. However, discard the event\n    // upon click because a cycle occurs and the item does not open.\n    if (this.openOnClick && !this.mouseDown) {\n      this.isMouseOverEnabled = true;\n    }\n\n    this.mouseDown = false;\n  };\n\n  MouseOverHandler.prototype.handleItemClick = function (itemId, clickedItemIsWithDefaultClose) {\n    if (this.openOnClick) {\n      if (this.isMouseOverEnabled) {\n        if (clickedItemIsWithDefaultClose) {\n          this.isMouseOverEnabled = false;\n          this.resetMenu();\n        }\n      } else {\n        this.isMouseOverEnabled = true;\n        this.openItem(itemId);\n      }\n    }\n  };\n\n  return MouseOverHandler;\n}();\n\nexport { MouseOverHandler };","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-layout/dist/es/menu/utils/MouseOverHandler.js"],"names":["MouseOverHandler","openOnClick","resetMenu","openItem","isMouseOverEnabled","Object","defineProperty","prototype","set","value","Boolean","mouseDown","enumerable","configurable","handleItemSelectedViaKeyboard","get","handleItemMouseDown","handleItemFocus","handleItemClick","itemId","clickedItemIsWithDefaultClose"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,gBAAgB;AAAG;AAAe,YAAY;AAC9C,WAASA,gBAAT,CAA0BC,WAA1B,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4D;AACxD,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKG,kBAAL,GAA0BH,WAAW,GAAG,KAAH,GAAW,IAAhD;AACH;;AACDI,EAAAA,MAAM,CAACC,cAAP,CAAsBN,gBAAgB,CAACO,SAAvC,EAAkD,aAAlD,EAAiE;AAC7DC,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,UAAIC,OAAO,CAACD,KAAD,CAAP,KAAmBC,OAAO,CAAC,KAAKT,WAAN,CAA9B,EAAkD;AAC9C,aAAKU,SAAL,GAAiB,KAAjB;AACA,aAAKP,kBAAL,GAA0BK,KAAK,GAAG,KAAH,GAAW,IAA1C;AACH;;AACD,WAAKR,WAAL,GAAmBQ,KAAnB;AACH,KAP4D;AAQ7DG,IAAAA,UAAU,EAAE,IARiD;AAS7DC,IAAAA,YAAY,EAAE;AAT+C,GAAjE;;AAWAb,EAAAA,gBAAgB,CAACO,SAAjB,CAA2BO,6BAA3B,GAA2D,YAAY;AACnE,QAAI,KAAKb,WAAT,EAAsB;AAClB,WAAKG,kBAAL,GAA0B,KAA1B;AACA,WAAKF,SAAL;AACH;AACJ,GALD;;AAMAG,EAAAA,MAAM,CAACC,cAAP,CAAsBN,gBAAgB,CAACO,SAAvC,EAAkD,oBAAlD,EAAwE;AACpEQ,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKX,kBAAZ;AACH,KAHmE;AAIpEQ,IAAAA,UAAU,EAAE,IAJwD;AAKpEC,IAAAA,YAAY,EAAE;AALsD,GAAxE;;AAOAb,EAAAA,gBAAgB,CAACO,SAAjB,CAA2BS,mBAA3B,GAAiD,YAAY;AACzD,SAAKL,SAAL,GAAiB,IAAjB;AACH,GAFD;;AAGAX,EAAAA,gBAAgB,CAACO,SAAjB,CAA2BU,eAA3B,GAA6C,YAAY;AACrD;AACA;AACA;AACA,QAAI,KAAKhB,WAAL,IAAoB,CAAC,KAAKU,SAA9B,EAAyC;AACrC,WAAKP,kBAAL,GAA0B,IAA1B;AACH;;AACD,SAAKO,SAAL,GAAiB,KAAjB;AACH,GARD;;AASAX,EAAAA,gBAAgB,CAACO,SAAjB,CAA2BW,eAA3B,GAA6C,UAAUC,MAAV,EAAkBC,6BAAlB,EAAiD;AAC1F,QAAI,KAAKnB,WAAT,EAAsB;AAClB,UAAI,KAAKG,kBAAT,EAA6B;AACzB,YAAIgB,6BAAJ,EAAmC;AAC/B,eAAKhB,kBAAL,GAA0B,KAA1B;AACA,eAAKF,SAAL;AACH;AACJ,OALD,MAMK;AACD,aAAKE,kBAAL,GAA0B,IAA1B;AACA,aAAKD,QAAL,CAAcgB,MAAd;AACH;AACJ;AACJ,GAbD;;AAcA,SAAOnB,gBAAP;AACH,CA3DqC,EAAtC;;AA4DA,SAASA,gBAAT","sourcesContent":["/**\n * @hidden\n */\nvar MouseOverHandler = /** @class */ (function () {\n    function MouseOverHandler(openOnClick, resetMenu, openItem) {\n        this.openOnClick = openOnClick;\n        this.resetMenu = resetMenu;\n        this.openItem = openItem;\n        this.openOnClick = openOnClick;\n        this.isMouseOverEnabled = openOnClick ? false : true;\n    }\n    Object.defineProperty(MouseOverHandler.prototype, \"OpenOnClick\", {\n        set: function (value) {\n            if (Boolean(value) !== Boolean(this.openOnClick)) {\n                this.mouseDown = false;\n                this.isMouseOverEnabled = value ? false : true;\n            }\n            this.openOnClick = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MouseOverHandler.prototype.handleItemSelectedViaKeyboard = function () {\n        if (this.openOnClick) {\n            this.isMouseOverEnabled = false;\n            this.resetMenu();\n        }\n    };\n    Object.defineProperty(MouseOverHandler.prototype, \"IsMouseOverEnabled\", {\n        get: function () {\n            return this.isMouseOverEnabled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MouseOverHandler.prototype.handleItemMouseDown = function () {\n        this.mouseDown = true;\n    };\n    MouseOverHandler.prototype.handleItemFocus = function () {\n        // Keep opening on mouse over upon tabbing\n        // and keyboard navigation. However, discard the event\n        // upon click because a cycle occurs and the item does not open.\n        if (this.openOnClick && !this.mouseDown) {\n            this.isMouseOverEnabled = true;\n        }\n        this.mouseDown = false;\n    };\n    MouseOverHandler.prototype.handleItemClick = function (itemId, clickedItemIsWithDefaultClose) {\n        if (this.openOnClick) {\n            if (this.isMouseOverEnabled) {\n                if (clickedItemIsWithDefaultClose) {\n                    this.isMouseOverEnabled = false;\n                    this.resetMenu();\n                }\n            }\n            else {\n                this.isMouseOverEnabled = true;\n                this.openItem(itemId);\n            }\n        }\n    };\n    return MouseOverHandler;\n}());\nexport { MouseOverHandler };\n"]},"metadata":{},"sourceType":"module"}