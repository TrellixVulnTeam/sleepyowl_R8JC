{"ast":null,"code":"import{toast}from'react-toastify';export var REGISTER_REQUEST='REGISTER_REQUEST';export var REGISTER_SUCCESS='REGISTER_SUCCESS';export var REGISTER_FAILURE='REGISTER_FAILURE';export function receiveRegister(){return{type:REGISTER_SUCCESS};}export function registerError(payload){return{type:REGISTER_FAILURE,payload:payload};}export function registerUser(payload){return function(dispatch){if(payload.creds.email.length>0&&payload.creds.password.length>0){toast.success(\"You've been registered successfully\");payload.history.push('/login');}else{dispatch(registerError(\"Something was wrong. Try again\"));}};}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/src/actions/register.js"],"names":["toast","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","receiveRegister","type","registerError","payload","registerUser","dispatch","creds","email","length","password","success","history","push"],"mappings":"AAAA,OAASA,KAAT,KAAsB,gBAAtB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CACP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,kBAAzB,CAEP,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChC,MAAO,CACLC,IAAI,CAAEH,gBADD,CAAP,CAGD,CAED,MAAO,SAASI,CAAAA,aAAT,CAAuBC,OAAvB,CAAgC,CACrC,MAAO,CACLF,IAAI,CAAEF,gBADD,CAELI,OAAO,CAAPA,OAFK,CAAP,CAID,CAED,MAAO,SAASC,CAAAA,YAAT,CAAsBD,OAAtB,CAA+B,CACpC,MAAO,UAACE,QAAD,CAAc,CACnB,GAAIF,OAAO,CAACG,KAAR,CAAcC,KAAd,CAAoBC,MAApB,CAA6B,CAA7B,EAAkCL,OAAO,CAACG,KAAR,CAAcG,QAAd,CAAuBD,MAAvB,CAAgC,CAAtE,CAAyE,CACvEZ,KAAK,CAACc,OAAN,CAAc,qCAAd,EACAP,OAAO,CAACQ,OAAR,CAAgBC,IAAhB,CAAqB,QAArB,EACD,CAHD,IAGO,CACLP,QAAQ,CAACH,aAAa,CAAC,gCAAD,CAAd,CAAR,CACD,CACF,CAPD,CAQD","sourcesContent":["import { toast } from 'react-toastify';\r\n\r\nexport const REGISTER_REQUEST = 'REGISTER_REQUEST';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAILURE = 'REGISTER_FAILURE';\r\n\r\nexport function receiveRegister() {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerError(payload) {\r\n  return {\r\n    type: REGISTER_FAILURE,\r\n    payload,\r\n  };\r\n}\r\n\r\nexport function registerUser(payload) {\r\n  return (dispatch) => {\r\n    if (payload.creds.email.length > 0 && payload.creds.password.length > 0) {\r\n      toast.success(\"You've been registered successfully\");\r\n      payload.history.push('/login');\r\n    } else {\r\n      dispatch(registerError(\"Something was wrong. Try again\"));\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}