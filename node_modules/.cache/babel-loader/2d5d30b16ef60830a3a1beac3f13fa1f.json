{"ast":null,"code":"'use strict';\n\nmodule.exports = asm6502;\nasm6502.displayName = 'asm6502';\nasm6502.aliases = [];\n\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'keyword'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    opcode: {\n      pattern: /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n      alias: 'property'\n    },\n    hexnumber: {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'string'\n    },\n    binarynumber: {\n      pattern: /#?%[01]+\\b/,\n      alias: 'string'\n    },\n    decimalnumber: {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'string'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    }\n  };\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/asm6502.js"],"names":["module","exports","asm6502","displayName","aliases","Prism","languages","comment","directive","pattern","alias","string","opcode","hexnumber","binarynumber","decimalnumber","register"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;AACtBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,OAAhB,GAA0B;AACxBK,IAAAA,OAAO,EAAE,KADe;AAExBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,YADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAFa;AAMxBC,IAAAA,MAAM,EAAE,mCANgB;AAOxBC,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EACL,ycAFI;AAGNC,MAAAA,KAAK,EAAE;AAHD,KAPgB;AAYxBG,IAAAA,SAAS,EAAE;AACTJ,MAAAA,OAAO,EAAE,qBADA;AAETC,MAAAA,KAAK,EAAE;AAFE,KAZa;AAgBxBI,IAAAA,YAAY,EAAE;AACZL,MAAAA,OAAO,EAAE,YADG;AAEZC,MAAAA,KAAK,EAAE;AAFK,KAhBU;AAoBxBK,IAAAA,aAAa,EAAE;AACbN,MAAAA,OAAO,EAAE,WADI;AAEbC,MAAAA,KAAK,EAAE;AAFM,KApBS;AAwBxBM,IAAAA,QAAQ,EAAE;AACRP,MAAAA,OAAO,EAAE,YADD;AAERC,MAAAA,KAAK,EAAE;AAFC;AAxBc,GAA1B;AA6BD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = asm6502\r\nasm6502.displayName = 'asm6502'\r\nasm6502.aliases = []\r\nfunction asm6502(Prism) {\r\n  Prism.languages.asm6502 = {\r\n    comment: /;.*/,\r\n    directive: {\r\n      pattern: /\\.\\w+(?= )/,\r\n      alias: 'keyword'\r\n    },\r\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n    opcode: {\r\n      pattern:\r\n        /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\r\n      alias: 'property'\r\n    },\r\n    hexnumber: {\r\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\r\n      alias: 'string'\r\n    },\r\n    binarynumber: {\r\n      pattern: /#?%[01]+\\b/,\r\n      alias: 'string'\r\n    },\r\n    decimalnumber: {\r\n      pattern: /#?\\b\\d+\\b/,\r\n      alias: 'string'\r\n    },\r\n    register: {\r\n      pattern: /\\b[xya]\\b/i,\r\n      alias: 'variable'\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}