{"ast":null,"code":"'use strict';\n\nmodule.exports = uri;\nuri.displayName = 'uri';\nuri.aliases = ['url'];\n\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(/^\\/\\//.source + // [ userinfo \"@\" ]\n      /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + ( // host\n      '(?:' + // IP-literal\n      /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/.source + '|' + // IPv4address or registered name\n      /[\\w\\-.~!$&'()*+,;=%]*/.source + ')') + // [ \":\" port ]\n      /(?::\\d*)?/.source, 'm'),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address': /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  };\n  Prism.languages.url = Prism.languages.uri;\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/uri.js"],"names":["module","exports","uri","displayName","aliases","Prism","languages","scheme","pattern","greedy","inside","fragment","query","pair","key","value","lookbehind","authority","RegExp","source","port","host","path","url"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,CAAC,KAAD,CAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClB;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,uBADH;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,MAAM,EAAE;AACN,4BAAoB;AADd;AAHF,KADY;AAQpBC,IAAAA,QAAQ,EAAE;AACRH,MAAAA,OAAO,EAAE,4BADD;AAERE,MAAAA,MAAM,EAAE;AACN,8BAAsB;AADhB;AAFA,KARU;AAcpBE,IAAAA,KAAK,EAAE;AACLJ,MAAAA,OAAO,EAAE,6BADJ;AAELE,MAAAA,MAAM,EAAE;AACN,2BAAmB;AACjBF,UAAAA,OAAO,EAAE,KADQ;AAEjBC,UAAAA,MAAM,EAAE;AAFS,SADb;AAKN,0BAAkB,MALZ;AAMNI,QAAAA,IAAI,EAAE;AACJL,UAAAA,OAAO,EAAE,cADL;AAEJE,UAAAA,MAAM,EAAE;AACNI,YAAAA,GAAG,EAAE,QADC;AAENC,YAAAA,KAAK,EAAE;AACLP,cAAAA,OAAO,EAAE,aADJ;AAELQ,cAAAA,UAAU,EAAE;AAFP;AAFD;AAFJ;AANA;AAFH,KAda;AAkCpBC,IAAAA,SAAS,EAAE;AACTT,MAAAA,OAAO,EAAEU,MAAM,CACb,QAAQC,MAAR,GAAiB;AACf,qCAA+BA,MADjC,KAC0C;AACvC,cAAQ;AACP,wEACGA,MAFJ,GAGC,GAHD,GAGO;AACN,8BAAwBA,MAJzB,GAKC,GAPJ,IAOW;AACT,kBAAYA,MATD,EAUb,GAVa,CADN;AAaTT,MAAAA,MAAM,EAAE;AACN,+BAAuB,OADjB;AAEN,6BAAqB;AACnBF,UAAAA,OAAO,EAAE,0BADU;AAEnBE,UAAAA,MAAM,EAAE;AACN,mCAAuB,IADjB;AAEN,yBAAa;AAFP;AAFW,SAFf;AASN,wBAAgB;AACdF,UAAAA,OAAO,EAAE,OADK;AAEdE,UAAAA,MAAM,EAAE;AACN,8BAAkB,IADZ;AAENU,YAAAA,IAAI,EAAE;AAFA;AAFM,SATV;AAgBNC,QAAAA,IAAI,EAAE;AACJb,UAAAA,OAAO,EAAE,SADL;AAEJE,UAAAA,MAAM,EAAE;AACN,0BAAc;AACZF,cAAAA,OAAO,EAAE,eADG;AAEZE,cAAAA,MAAM,EAAE;AACN,wCAAwB,SADlB;AAEN,8BAAc,WAFR;AAGN,gCAAgB;AAHV;AAFI,aADR;AASN,4BACE;AAVI;AAFJ;AAhBA;AAbC,KAlCS;AAgFpBY,IAAAA,IAAI,EAAE;AACJd,MAAAA,OAAO,EAAE,4BADL;AAEJE,MAAAA,MAAM,EAAE;AACN,0BAAkB;AADZ;AAFJ;AAhFc,GAAtB;AAuFAL,EAAAA,KAAK,CAACC,SAAN,CAAgBiB,GAAhB,GAAsBlB,KAAK,CAACC,SAAN,CAAgBJ,GAAtC;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = uri\r\nuri.displayName = 'uri'\r\nuri.aliases = ['url']\r\nfunction uri(Prism) {\r\n  // https://tools.ietf.org/html/rfc3986#appendix-A\r\n  Prism.languages.uri = {\r\n    scheme: {\r\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\r\n      greedy: true,\r\n      inside: {\r\n        'scheme-delimiter': /:$/\r\n      }\r\n    },\r\n    fragment: {\r\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\r\n      inside: {\r\n        'fragment-delimiter': /^#/\r\n      }\r\n    },\r\n    query: {\r\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\r\n      inside: {\r\n        'query-delimiter': {\r\n          pattern: /^\\?/,\r\n          greedy: true\r\n        },\r\n        'pair-delimiter': /[&;]/,\r\n        pair: {\r\n          pattern: /^[^=][\\s\\S]*/,\r\n          inside: {\r\n            key: /^[^=]+/,\r\n            value: {\r\n              pattern: /(^=)[\\s\\S]+/,\r\n              lookbehind: true\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    authority: {\r\n      pattern: RegExp(\r\n        /^\\/\\//.source + // [ userinfo \"@\" ]\r\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\r\n          ('(?:' + // IP-literal\r\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\r\n              .source +\r\n            '|' + // IPv4address or registered name\r\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\r\n            ')') + // [ \":\" port ]\r\n          /(?::\\d*)?/.source,\r\n        'm'\r\n      ),\r\n      inside: {\r\n        'authority-delimiter': /^\\/\\//,\r\n        'user-info-segment': {\r\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\r\n          inside: {\r\n            'user-info-delimiter': /@$/,\r\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\r\n          }\r\n        },\r\n        'port-segment': {\r\n          pattern: /:\\d*$/,\r\n          inside: {\r\n            'port-delimiter': /^:/,\r\n            port: /^\\d+/\r\n          }\r\n        },\r\n        host: {\r\n          pattern: /[\\s\\S]+/,\r\n          inside: {\r\n            'ip-literal': {\r\n              pattern: /^\\[[\\s\\S]+\\]$/,\r\n              inside: {\r\n                'ip-literal-delimiter': /^\\[|\\]$/,\r\n                'ipv-future': /^v[\\s\\S]+/,\r\n                'ipv6-address': /^[\\s\\S]+/\r\n              }\r\n            },\r\n            'ipv4-address':\r\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]{0,2})$/\r\n          }\r\n        }\r\n      }\r\n    },\r\n    path: {\r\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\r\n      inside: {\r\n        'path-separator': /\\//\r\n      }\r\n    }\r\n  }\r\n  Prism.languages.url = Prism.languages.uri\r\n}\r\n"]},"metadata":{},"sourceType":"script"}