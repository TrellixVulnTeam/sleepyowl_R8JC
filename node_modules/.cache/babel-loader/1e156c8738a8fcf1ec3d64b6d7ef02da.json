{"ast":null,"code":"import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { avatarType, avatarShape, avatarSize, avatarFill, avatarThemeColor } from './interfaces/Enums';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\nexport var Avatar = function (props) {\n  validatePackage(packageMetadata);\n  return React.createElement(\"div\", {\n    style: props.style,\n    className: classNames('k-avatar', \"k-avatar-\" + props.fill, \"k-avatar-\" + props.shape, \"k-avatar-\" + props.themeColor, {\n      'k-avatar-bordered': props.border,\n      'k-avatar-sm': props.size === 'small',\n      'k-avatar-md': props.size === 'medium',\n      'k-avatar-lg': props.size === 'large'\n    }, props.className)\n  }, React.createElement(\"span\", {\n    className: \"k-avatar-\" + props.type\n  }, props.children));\n};\nAvatar.propTypes = {\n  className: PropTypes.string,\n  shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'rectangle']),\n  type: PropTypes.oneOf(['text', 'image', 'icon']),\n  fill: PropTypes.oneOf(['solid', 'outline']),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  themeColor: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse', 'inherit'])\n};\nAvatar.defaultProps = {\n  type: avatarType.TEXT,\n  shape: avatarShape.SQUARE,\n  size: avatarSize.MEDIUM,\n  fill: avatarFill.SOLID,\n  themeColor: avatarThemeColor.PRIMARY\n};","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-layout/dist/es/card/Avatar.js"],"names":["React","PropTypes","classNames","avatarType","avatarShape","avatarSize","avatarFill","avatarThemeColor","validatePackage","packageMetadata","Avatar","props","createElement","style","className","fill","shape","themeColor","border","size","type","children","propTypes","string","oneOf","defaultProps","TEXT","SQUARE","MEDIUM","SOLID","PRIMARY"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,EAA8CC,UAA9C,EAA0DC,gBAA1D,QAAkF,oBAAlF;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAO,IAAIC,MAAM,GAAG,UAAUC,KAAV,EAAiB;AACjCH,EAAAA,eAAe,CAACC,eAAD,CAAf;AACA,SAAQT,KAAK,CAACY,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAAf;AAAsBC,IAAAA,SAAS,EAAEZ,UAAU,CAAC,UAAD,EAAa,cAAcS,KAAK,CAACI,IAAjC,EAAuC,cAAcJ,KAAK,CAACK,KAA3D,EAAkE,cAAcL,KAAK,CAACM,UAAtF,EAAkG;AACxK,2BAAqBN,KAAK,CAACO,MAD6I;AAExK,qBAAeP,KAAK,CAACQ,IAAN,KAAe,OAF0I;AAGxK,qBAAeR,KAAK,CAACQ,IAAN,KAAe,QAH0I;AAIxK,qBAAeR,KAAK,CAACQ,IAAN,KAAe;AAJ0I,KAAlG,EAKvER,KAAK,CAACG,SALiE;AAA3C,GAA3B,EAMJd,KAAK,CAACY,aAAN,CAAoB,MAApB,EAA4B;AAAEE,IAAAA,SAAS,EAAE,cAAcH,KAAK,CAACS;AAAjC,GAA5B,EAAqET,KAAK,CAACU,QAA3E,CANI,CAAR;AAOH,CATM;AAUPX,MAAM,CAACY,SAAP,GAAmB;AACfR,EAAAA,SAAS,EAAEb,SAAS,CAACsB,MADN;AAEfP,EAAAA,KAAK,EAAEf,SAAS,CAACuB,KAAV,CAAgB,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,CAAhB,CAFQ;AAGfJ,EAAAA,IAAI,EAAEnB,SAAS,CAACuB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CAAhB,CAHS;AAIfT,EAAAA,IAAI,EAAEd,SAAS,CAACuB,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,CAAhB,CAJS;AAKfL,EAAAA,IAAI,EAAElB,SAAS,CAACuB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CALS;AAMfP,EAAAA,UAAU,EAAEhB,SAAS,CAACuB,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,MAArC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,OAAnE,EAA4E,MAA5E,EAAoF,OAApF,EAA6F,SAA7F,EAAwG,SAAxG,CAAhB;AANG,CAAnB;AAQAd,MAAM,CAACe,YAAP,GAAsB;AAClBL,EAAAA,IAAI,EAAEjB,UAAU,CAACuB,IADC;AAElBV,EAAAA,KAAK,EAAEZ,WAAW,CAACuB,MAFD;AAGlBR,EAAAA,IAAI,EAAEd,UAAU,CAACuB,MAHC;AAIlBb,EAAAA,IAAI,EAAET,UAAU,CAACuB,KAJC;AAKlBZ,EAAAA,UAAU,EAAEV,gBAAgB,CAACuB;AALX,CAAtB","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { classNames } from '@progress/kendo-react-common';\nimport { avatarType, avatarShape, avatarSize, avatarFill, avatarThemeColor } from './interfaces/Enums';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from '../package-metadata';\nexport var Avatar = function (props) {\n    validatePackage(packageMetadata);\n    return (React.createElement(\"div\", { style: props.style, className: classNames('k-avatar', \"k-avatar-\" + props.fill, \"k-avatar-\" + props.shape, \"k-avatar-\" + props.themeColor, {\n            'k-avatar-bordered': props.border,\n            'k-avatar-sm': props.size === 'small',\n            'k-avatar-md': props.size === 'medium',\n            'k-avatar-lg': props.size === 'large'\n        }, props.className) },\n        React.createElement(\"span\", { className: \"k-avatar-\" + props.type }, props.children)));\n};\nAvatar.propTypes = {\n    className: PropTypes.string,\n    shape: PropTypes.oneOf(['circle', 'square', 'rounded', 'rectangle']),\n    type: PropTypes.oneOf(['text', 'image', 'icon']),\n    fill: PropTypes.oneOf(['solid', 'outline']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n    themeColor: PropTypes.oneOf(['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse', 'inherit'])\n};\nAvatar.defaultProps = {\n    type: avatarType.TEXT,\n    shape: avatarShape.SQUARE,\n    size: avatarSize.MEDIUM,\n    fill: avatarFill.SOLID,\n    themeColor: avatarThemeColor.PRIMARY\n};\n"]},"metadata":{},"sourceType":"module"}