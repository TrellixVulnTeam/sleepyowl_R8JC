{"ast":null,"code":"'use strict';\n\nmodule.exports = openqasm;\nopenqasm.displayName = 'openqasm';\nopenqasm.aliases = ['qasm'];\n\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword: /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\n    'class-name': /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\n    constant: /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  };\n  Prism.languages.qasm = Prism.languages.openqasm;\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/openqasm.js"],"names":["module","exports","openqasm","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","function","constant","number","lookbehind","operator","punctuation","qasm"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,CAAC,MAAD,CAAnB;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACvB;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2B;AACzBK,IAAAA,OAAO,EAAE,yBADgB;AAEzBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,6BADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFiB;AAMzBC,IAAAA,OAAO,EACL,8NAPuB;AAQzB,kBACE,4EATuB;AAUzBC,IAAAA,QAAQ,EAAE,6DAVe;AAWzBC,IAAAA,QAAQ,EAAE,6BAXe;AAYzBC,IAAAA,MAAM,EAAE;AACNL,MAAAA,OAAO,EACL,wEAFI;AAGNM,MAAAA,UAAU,EAAE;AAHN,KAZiB;AAiBzBC,IAAAA,QAAQ,EAAE,mDAjBe;AAkBzBC,IAAAA,WAAW,EAAE;AAlBY,GAA3B;AAoBAZ,EAAAA,KAAK,CAACC,SAAN,CAAgBY,IAAhB,GAAuBb,KAAK,CAACC,SAAN,CAAgBJ,QAAvC;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = openqasm\r\nopenqasm.displayName = 'openqasm'\r\nopenqasm.aliases = ['qasm']\r\nfunction openqasm(Prism) {\r\n  // https://qiskit.github.io/openqasm/grammar/index.html\r\n  Prism.languages.openqasm = {\r\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\r\n    string: {\r\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\r\n      greedy: true\r\n    },\r\n    keyword:\r\n      /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\r\n    'class-name':\r\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\r\n    function: /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\r\n    constant: /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\r\n    number: {\r\n      pattern:\r\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\r\n      lookbehind: true\r\n    },\r\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\r\n    punctuation: /[(){}\\[\\];,:.]/\r\n  }\r\n  Prism.languages.qasm = Prism.languages.openqasm\r\n}\r\n"]},"metadata":{},"sourceType":"script"}