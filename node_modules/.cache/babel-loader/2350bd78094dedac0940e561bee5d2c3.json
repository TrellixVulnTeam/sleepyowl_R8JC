{"ast":null,"code":"'use strict';\n\nmodule.exports = antlr4;\nantlr4.displayName = 'antlr4';\nantlr4.aliases = ['g4'];\n\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape: /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern: /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword: /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [{\n      pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n      alias: ['rule', 'class-name']\n    }, {\n      pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n      alias: ['token', 'constant']\n    }],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  };\n  Prism.languages.g4 = Prism.languages.antlr4;\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/node_modules/refractor/lang/antlr4.js"],"names":["module","exports","antlr4","displayName","aliases","Prism","languages","comment","string","pattern","greedy","alias","inside","range","lookbehind","escape","punctuation","action","content","command","function","annotation","label","keyword","definition","constant","operator","g4"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,IAAD,CAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,IAAAA,OAAO,EAAE,+BADc;AAEvBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,uBADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFe;AAMvB,uBAAmB;AACjBD,MAAAA,OAAO,EAAE,0BADQ;AAEjBC,MAAAA,MAAM,EAAE,IAFS;AAGjBC,MAAAA,KAAK,EAAE,OAHU;AAIjBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLJ,UAAAA,OAAO,EAAE,wCADJ;AAELK,UAAAA,UAAU,EAAE,IAFP;AAGLH,UAAAA,KAAK,EAAE;AAHF,SADD;AAMNI,QAAAA,MAAM,EACJ,qEAPI;AAQNC,QAAAA,WAAW,EAAE;AARP;AAJS,KANI;AAqBvBC,IAAAA,MAAM,EAAE;AACNR,MAAAA,OAAO,EAAE,yDADH;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNE,MAAAA,MAAM,EAAE;AACNM,QAAAA,OAAO,EAAE;AACP;AACAT,UAAAA,OAAO,EAAE,mBAFF;AAGPK,UAAAA,UAAU,EAAE;AAHL,SADH;AAMNE,QAAAA,WAAW,EAAE;AANP;AAHF,KArBe;AAiCvBG,IAAAA,OAAO,EAAE;AACPV,MAAAA,OAAO,EACL,yEAFK;AAGPK,MAAAA,UAAU,EAAE,IAHL;AAIPF,MAAAA,MAAM,EAAE;AACNQ,QAAAA,QAAQ,EAAE,wBADJ;AAENJ,QAAAA,WAAW,EAAE;AAFP;AAJD,KAjCc;AA0CvBK,IAAAA,UAAU,EAAE;AACVZ,MAAAA,OAAO,EAAE,gBADC;AAEVE,MAAAA,KAAK,EAAE;AAFG,KA1CW;AA8CvBW,IAAAA,KAAK,EAAE;AACLb,MAAAA,OAAO,EAAE,YADJ;AAELE,MAAAA,KAAK,EAAE;AAFF,KA9CgB;AAkDvBY,IAAAA,OAAO,EACL,+GAnDqB;AAoDvBC,IAAAA,UAAU,EAAE,CACV;AACEf,MAAAA,OAAO,EAAE,oBADX;AAEEE,MAAAA,KAAK,EAAE,CAAC,MAAD,EAAS,YAAT;AAFT,KADU,EAKV;AACEF,MAAAA,OAAO,EAAE,oBADX;AAEEE,MAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,UAAV;AAFT,KALU,CApDW;AA8DvBc,IAAAA,QAAQ,EAAE,kBA9Da;AA+DvBC,IAAAA,QAAQ,EAAE,uBA/Da;AAgEvBV,IAAAA,WAAW,EAAE;AAhEU,GAAzB;AAkEAX,EAAAA,KAAK,CAACC,SAAN,CAAgBqB,EAAhB,GAAqBtB,KAAK,CAACC,SAAN,CAAgBJ,MAArC;AACD","sourcesContent":["'use strict'\r\n\r\nmodule.exports = antlr4\r\nantlr4.displayName = 'antlr4'\r\nantlr4.aliases = ['g4']\r\nfunction antlr4(Prism) {\r\n  Prism.languages.antlr4 = {\r\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\r\n    string: {\r\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\r\n      greedy: true\r\n    },\r\n    'character-class': {\r\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\r\n      greedy: true,\r\n      alias: 'regex',\r\n      inside: {\r\n        range: {\r\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\r\n          lookbehind: true,\r\n          alias: 'punctuation'\r\n        },\r\n        escape:\r\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\r\n        punctuation: /[\\[\\]]/\r\n      }\r\n    },\r\n    action: {\r\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\r\n      greedy: true,\r\n      inside: {\r\n        content: {\r\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\r\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\r\n          lookbehind: true\r\n        },\r\n        punctuation: /[{}]/\r\n      }\r\n    },\r\n    command: {\r\n      pattern:\r\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\r\n      lookbehind: true,\r\n      inside: {\r\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\r\n        punctuation: /[,()]/\r\n      }\r\n    },\r\n    annotation: {\r\n      pattern: /@\\w+(?:::\\w+)*/,\r\n      alias: 'keyword'\r\n    },\r\n    label: {\r\n      pattern: /#[ \\t]*\\w+/,\r\n      alias: 'punctuation'\r\n    },\r\n    keyword:\r\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\r\n    definition: [\r\n      {\r\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\r\n        alias: ['rule', 'class-name']\r\n      },\r\n      {\r\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\r\n        alias: ['token', 'constant']\r\n      }\r\n    ],\r\n    constant: /\\b[A-Z][A-Z_]*\\b/,\r\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\r\n    punctuation: /[;:()=]/\r\n  }\r\n  Prism.languages.g4 = Prism.languages.antlr4\r\n}\r\n"]},"metadata":{},"sourceType":"script"}