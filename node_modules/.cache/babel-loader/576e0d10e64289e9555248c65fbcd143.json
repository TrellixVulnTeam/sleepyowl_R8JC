{"ast":null,"code":"import { eitherRect, replaceOffset } from '../util';\n/**\n * @hidden\n */\n\nvar PositionService =\n/** @class */\nfunction () {\n  function PositionService(_dom) {\n    this._dom = _dom;\n  }\n\n  PositionService.prototype.positionElement = function (settings) {\n    var anchor = settings.anchor,\n        currentLocation = settings.currentLocation,\n        element = settings.element,\n        anchorAlign = settings.anchorAlign,\n        elementAlign = settings.elementAlign,\n        collisions = settings.collisions;\n    var dom = this._dom;\n    var viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);\n    var anchorRect = eitherRect(dom.offset(anchor), currentLocation);\n    var initialElementRect = replaceOffset(dom.staticOffset(element), currentLocation);\n    var elementRect = this.elementRect(element, initialElementRect);\n    var result = dom.restrictToView({\n      anchorAlign: anchorAlign,\n      anchorRect: anchorRect,\n      collisions: collisions,\n      elementAlign: elementAlign,\n      elementRect: elementRect,\n      viewPort: viewPort\n    });\n    return {\n      flipped: result.flipped,\n      offset: dom.addOffset(initialElementRect, result.offset)\n    };\n  };\n\n  PositionService.prototype.elementRect = function (element, rect) {\n    return this._dom.removeScroll(rect, this._dom.scrollPosition(element));\n  };\n\n  return PositionService;\n}();\n\nexport { PositionService };","map":{"version":3,"sources":["D:/Rnd/sofia-react-template/node_modules/@progress/kendo-react-popup/dist/es/services/positionService.js"],"names":["eitherRect","replaceOffset","PositionService","_dom","prototype","positionElement","settings","anchor","currentLocation","element","anchorAlign","elementAlign","collisions","dom","viewPort","stackingElementViewPort","windowViewPort","anchorRect","offset","initialElementRect","staticOffset","elementRect","result","restrictToView","flipped","addOffset","rect","removeScroll","scrollPosition"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,SAA1C;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;AAAe,YAAY;AAC7C,WAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDD,EAAAA,eAAe,CAACE,SAAhB,CAA0BC,eAA1B,GAA4C,UAAUC,QAAV,EAAoB;AAC5D,QAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;AAAA,QAA8BC,eAAe,GAAGF,QAAQ,CAACE,eAAzD;AAAA,QAA0EC,OAAO,GAAGH,QAAQ,CAACG,OAA7F;AAAA,QAAsGC,WAAW,GAAGJ,QAAQ,CAACI,WAA7H;AAAA,QAA0IC,YAAY,GAAGL,QAAQ,CAACK,YAAlK;AAAA,QAAgLC,UAAU,GAAGN,QAAQ,CAACM,UAAtM;AACA,QAAIC,GAAG,GAAG,KAAKV,IAAf;AACA,QAAIW,QAAQ,GAAGR,QAAQ,CAACQ,QAAT,IAAqBD,GAAG,CAACE,uBAAJ,CAA4BN,OAA5B,CAArB,IAA6DI,GAAG,CAACG,cAAJ,CAAmBP,OAAnB,CAA5E;AACA,QAAIQ,UAAU,GAAGjB,UAAU,CAACa,GAAG,CAACK,MAAJ,CAAWX,MAAX,CAAD,EAAqBC,eAArB,CAA3B;AACA,QAAIW,kBAAkB,GAAGlB,aAAa,CAACY,GAAG,CAACO,YAAJ,CAAiBX,OAAjB,CAAD,EAA4BD,eAA5B,CAAtC;AACA,QAAIa,WAAW,GAAG,KAAKA,WAAL,CAAiBZ,OAAjB,EAA0BU,kBAA1B,CAAlB;AACA,QAAIG,MAAM,GAAGT,GAAG,CAACU,cAAJ,CAAmB;AAC5Bb,MAAAA,WAAW,EAAEA,WADe;AAE5BO,MAAAA,UAAU,EAAEA,UAFgB;AAG5BL,MAAAA,UAAU,EAAEA,UAHgB;AAI5BD,MAAAA,YAAY,EAAEA,YAJc;AAK5BU,MAAAA,WAAW,EAAEA,WALe;AAM5BP,MAAAA,QAAQ,EAAEA;AANkB,KAAnB,CAAb;AAQA,WAAO;AACHU,MAAAA,OAAO,EAAEF,MAAM,CAACE,OADb;AAEHN,MAAAA,MAAM,EAAEL,GAAG,CAACY,SAAJ,CAAcN,kBAAd,EAAkCG,MAAM,CAACJ,MAAzC;AAFL,KAAP;AAIH,GAnBD;;AAoBAhB,EAAAA,eAAe,CAACE,SAAhB,CAA0BiB,WAA1B,GAAwC,UAAUZ,OAAV,EAAmBiB,IAAnB,EAAyB;AAC7D,WAAO,KAAKvB,IAAL,CAAUwB,YAAV,CAAuBD,IAAvB,EAA6B,KAAKvB,IAAL,CAAUyB,cAAV,CAAyBnB,OAAzB,CAA7B,CAAP;AACH,GAFD;;AAGA,SAAOP,eAAP;AACH,CA5BoC,EAArC;;AA6BA,SAASA,eAAT","sourcesContent":["import { eitherRect, replaceOffset } from '../util';\n/**\n * @hidden\n */\nvar PositionService = /** @class */ (function () {\n    function PositionService(_dom) {\n        this._dom = _dom;\n    }\n    PositionService.prototype.positionElement = function (settings) {\n        var anchor = settings.anchor, currentLocation = settings.currentLocation, element = settings.element, anchorAlign = settings.anchorAlign, elementAlign = settings.elementAlign, collisions = settings.collisions;\n        var dom = this._dom;\n        var viewPort = settings.viewPort || dom.stackingElementViewPort(element) || dom.windowViewPort(element);\n        var anchorRect = eitherRect(dom.offset(anchor), currentLocation);\n        var initialElementRect = replaceOffset(dom.staticOffset(element), currentLocation);\n        var elementRect = this.elementRect(element, initialElementRect);\n        var result = dom.restrictToView({\n            anchorAlign: anchorAlign,\n            anchorRect: anchorRect,\n            collisions: collisions,\n            elementAlign: elementAlign,\n            elementRect: elementRect,\n            viewPort: viewPort\n        });\n        return {\n            flipped: result.flipped,\n            offset: dom.addOffset(initialElementRect, result.offset)\n        };\n    };\n    PositionService.prototype.elementRect = function (element, rect) {\n        return this._dom.removeScroll(rect, this._dom.scrollPosition(element));\n    };\n    return PositionService;\n}());\nexport { PositionService };\n"]},"metadata":{},"sourceType":"module"}