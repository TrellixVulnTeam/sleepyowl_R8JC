{"ast":null,"code":"import { REGISTER_FAILURE, REGISTER_REQUEST, REGISTER_SUCCESS } from \"../actions/register.js\";\nexport default function register() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isFetching: false,\n    errorMessage: ''\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return Object.assign({}, state, {\n        isFetching: true\n      });\n\n    case REGISTER_SUCCESS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        errorMessage: ''\n      });\n\n    case REGISTER_FAILURE:\n      return Object.assign({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Rnd/sleepyowl/src/reducers/register.js"],"names":["REGISTER_FAILURE","REGISTER_REQUEST","REGISTER_SUCCESS","register","state","isFetching","errorMessage","action","type","Object","assign","payload"],"mappings":"AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,gBAHF,QAIO,wBAJP;AAMA,eAAe,SAASC,QAAT,GAGJ;AAAA,MAHsBC,KAGtB,uEAH8B;AACvCC,IAAAA,UAAU,EAAE,KAD2B;AAEvCC,IAAAA,YAAY,EAAE;AAFyB,GAG9B;AAAA,MAARC,MAAQ;;AACT,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,gBAAL;AACE,aAAOQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE;AADkB,OAAzB,CAAP;;AAGF,SAAKH,gBAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,YAAY,EAAE;AAFgB,OAAzB,CAAP;;AAIF,SAAKN,gBAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyB;AAC9BC,QAAAA,UAAU,EAAE,KADkB;AAE9BC,QAAAA,YAAY,EAAEC,MAAM,CAACI;AAFS,OAAzB,CAAP;;AAIF;AACE,aAAOP,KAAP;AAhBJ;AAkBD","sourcesContent":["import {\r\n  REGISTER_FAILURE,\r\n  REGISTER_REQUEST,\r\n  REGISTER_SUCCESS\r\n} from \"../actions/register.js\";\r\n\r\nexport default function register(state = {\r\n  isFetching: false,\r\n  errorMessage: '',\r\n}, action) {\r\n  switch (action.type) {\r\n    case REGISTER_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n      });\r\n    case REGISTER_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errorMessage: '',\r\n      });\r\n    case REGISTER_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errorMessage: action.payload,\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}